#!/bin/bash

#                                                                             #
#                                  __                                         #
#                                 /\ \__                                      #
#                   ____     __   \ \ ,_\   __  __   _____                    #
#                  /',__\  /'__`\  \ \ \/  /\ \/\ \ /\ '__`\                  #
#                 /\__, `\/\  __/   \ \ \_ \ \ \_\ \\ \ \L\ \                 #
#                 \/\____/\ \____\   \ \__\ \ \____/ \ \ ,__/                 #
#                  \/___/  \/____/    \/__/  \/___/   \ \ \/                  #
#                                                      \ \_\                  #
#                                                       \/_/                  #
#                                                                             #
#                                                                             #


#                           /\                                                #
#                          /  \     _ __    _ __    ___                       #
#                         / /\ \   | '_ \  | '_ \  / __|                      #
#                        / ____ \  | |_) | | |_) | \__ \                      #
#                       /_/    \_\ | .__/  | .__/  |___/                      #
#                                  | |     | |                                #
#                                  |_|     |_|                                #
#                                                                             #


#-----------------------------------------------------------------------------#
#                                apt packages                                 #
#-----------------------------------------------------------------------------#

# Apps
# ====
sudo apt install -y chromium-browser flameshot anki vim guake git-extras
sudo apt install -y deluge nomacs font-manager redshift

# Utils
# =====
sudo apt install -y htop tree tlp unar unrar psensor aria2 poppler-utils
sudo apt install -y wkhtmltopdf img2pdf deborphan

# Media
# =====
sudo apt install -y exfat-utils flac lame x264 vlc mpv

# Fonts
# =====
sudo apt install -y fonts-hack fonts-oxygen fonts-noto-cjk-extra "fonts-sawarabi*" \
fonts-mplus fonts-mononoki "fonts-moe*" fonts-umeplus \
fonts-woowa-hanna "fonts-wqy*" fonts-ebgaramond-extra fonts-cantarell \
"fonts-aoyagi*" fonts-ipafont fonts-seto fonts-misaki fonts-mikachan \
"fonts-takao*" fonts-lato fonts-stix \
texlive-fonts-recommended texlive-latex-recommended \
fonts-umeplus fonts-hanazono

# Dictionaries
# ============
sudo apt install -y dictd dict-gcide dict-wn dict-moby-thesaurus




#-----------------------------------------------------------------------------#
#                            Indepedent Installers                            #
#-----------------------------------------------------------------------------#

# Joplin
# ======
wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh | bash

# n (node manager)
# ================
curl -L https://git.io/n-install | N_PREFIX=~/.n bash -s -- -y

# npm
# ---
npm i -g electron
npm i -g nativefier
npm i -g tldr
npm i -g lorem-ipsum


# Pyenv
# =====
curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash;

# Oh-my-zsh
# =========
sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)";

# croc
# ====
curl https://getcroc.schollz.com | bash

# fzf
# ===
git clone --depth=1 junegunn/fzf.git ~/.Apps/utils/fzf

# Z jump
# ======
wget -O ~/.Apps/utils/Z_jumpz.sh https://raw.githubusercontent.com/rupa/z/master/z.sh



#-----------------------------------------------------------------------------#
#                           __  __   ___   ___    ___                         #
#                          |  \/  | |_ _| / __|  / __|                        #
#                          | |\/| |  | |  \__ \ | (__                         #
#                          |_|  |_| |___| |___/  \___|                        #
#                                                                             #
#-----------------------------------------------------------------------------#

# Disable CDROM Eject Buttom
# ==========================
eject -i 1 /dev/sr0  # assign as app autostart




#   __       ___
#  |__)  /\   |  |__|
#  |    /~~\  |  |  |
#  ------------------



# Smarter path add funcs
# ======================
# These functions will only add something to path IF it
#  is not present in path already
path_append() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="${PATH:+"$PATH:"}$1"
    fi
}
path_prepend() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+:${PATH}}"
    fi
}


#=============================================================================#
#                            _                                                #
#                           | |                                               #
#                     _ __  | |__     ___   _ __   __   __                    #
#                    | '__| | '_ \   / _ \ | '_ \  \ \ / /                    #
#                    | |    | |_) | |  __/ | | | |  \ V /                     #
#                    |_|    |_.__/   \___| |_| |_|   \_/                      #
#                                                                             #
#=============================================================================#



# INSTALLATION
# ============

# 1 - Use the installer
wget -q https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer -O- | bash

# 2 - Update shell config for rbenv path and init
#---- Path
PATH="${PATH:+"$PATH:"}$HOME/.rbenv/bin"
# The "official" way:
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.zshrc
#---- init
eval "$(rbenv init -)"


# 4 - Install a ruby version
rbenv install -l   # list all ruby versions available
rbenv install 2.5.3

# 5 - Local your rbenv ver and check gems path
rbenv local 2.5.3
gem env home  # should show rbenv
#  /home/evan/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0

# 6 - install gems
gem install bundler


#=============================================================================#
#                     _____    _____   ____   __          __                  #
#                    / ____|  / ____| |  _ \  \ \        / /                  #
#                   | (___   | |      | |_) |  \ \  /\  / /                   #
#                    \___ \  | |      |  _ <    \ \/  \/ /                    #
#                    ____) | | |____  | |_) |    \  /\  /                     #
#                   |_____/   \_____| |____/      \/  \/                      #
#                                                                             #
#=============================================================================#

#-----------------------------------------------------------------------------#
#                                   DOCKER                                    #
#-----------------------------------------------------------------------------#

# Instructions from SCBW
#   github.com/Games-and-Simulations/sc-docker
# =======================
sudo apt update
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common

#=== add docker repository
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

#=== install docker
sudo apt update
sudo apt install -y docker-ce=17.09.0~ce-0~ubuntu # NB: this ver pkg was UNAVAILABLE

#=== Make sure you can run docker without sudo
sudo usermod -aG docker $USER
# Restart shell
docker run hello-world

#-----------------------------------------------------------------------------#
#                                Python Setup                                 #
#-----------------------------------------------------------------------------#

# Steps here different, assuming you have pyenv
pip install scbw
scbw.play --install  # This can take awhile, download n install


#-----------------------------------------------------------------------------#
#                            GUI setup: VNC Viewer                            #
#-----------------------------------------------------------------------------#
#=== Download VNC Viewer @   https://www.realvnc.com/en/connect/download/viewer/linux/
# eg: https://www.realvnc.com/download/file/viewer.files/VNC-Viewer-6.18.907-Linux-x64.deb

#######    IF YOU DOWNLOADED THE .deb,  INSTEAD OF BINARY             #########

#  VNC viewer is launched via 'vncviewer' through the deb install
#  However, scbw launches through 'vnc-viewer', so you need to symlink to same dir
#   >>-----> ln -s /usr/bin/vncviewer /usr/bin/vnc-viewer
#   * the scbw instructions say to symlink the binary to /usr/bin as 'vnc-viewer'
#   * the .deb is actually launched by 'vncviewer'


# FINALLY: watch a match between two bots!
#  (in headful mode, you must select the map, wait in lobby for bots to join, and start)
scbw.play --bots "krasi0" "CherryPi" --show_all

#=============================================================================#
#                                                                             #
#               ____   __          __             _____    _____              #
#              |  _ \  \ \        / /     /\     |  __ \  |_   _|             #
#              | |_) |  \ \  /\  / /     /  \    | |__) |   | |               #
#              |  _ <    \ \/  \/ /     / /\ \   |  ___/    | |               #
#              | |_) |    \  /\  /     / ____ \  | |       _| |_              #
#              |____/      \/  \/     /_/    \_\ |_|      |_____|             #
#                                                                             #
#=============================================================================#

# Clone and make
# ==============
git clone https://github.com/openbw/openbw
git clone https://github.com/openbw/bwapi
cd bwapi
mkdir build
cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBW_DIR=../../openbw -DOPENBW_ENABLE_UI=1
make

# GUI setup
# =========
sudo apt install libsdl2-dev

# OpenBW needs the usual 3 mpq files in the working directory when it starts
# (Stardat.mpq, Broodat.mpq and Patch_rt.mpq). These can be copied from
# StarCraft: BroodWar 1.16.1 or 1.18, or you can just start BWAPILauncher from the StarCraft directory.

# I remember this being a HUGE PITA before sourcing these files
#  you probably have on ext hdd, CHECK

#=============================================================================#
#                           _____     ____     _____                          #
#                          |  __ \   / __ \   / ____|                         #
#                          | |__) | | |  | | | (___                           #
#                          |  _  /  | |  | |  \___ \                          #
#                          | | \ \  | |__| |  ____) |                         #
#                          |_|  \_\  \____/  |_____/                          #
#                                                                             #
#=============================================================================#

# Add ROS source to apt sources
# -----------------------------
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
sudo apt update

# Install and initialize
# ----------------------
sudo apt install ros-melodic-desktop-full
sudo rosdep init
rosdep update

# Env setup
# ---------
# in zshrc:
source /opt/ros/melodic/setup.zsh
# for rosinstall (only need python-rosinstall I think, other shit may be bloat)
sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential

#                               _
#   __ _    __ _   ____   ___  | |__     ___
#  / _` |  / _` | |_  /  / _ \ | '_ \   / _ \
# | (_| | | (_| |  / /  |  __/ | |_) | | (_) |
#  \__, |  \__,_| /___|  \___| |_.__/   \___/
#  |___/

# Install and run
# ---------------
curl -sSL http://get.gazebosim.org | sh
gazebo


