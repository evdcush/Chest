#!/bin/bash
#=============================================================================#
#                                                                             #
#           .d8888b.  8888888888 88888888888 888     888 8888888b.            #
#          d88P  Y88b 888            888     888     888 888   Y88b           #
#          Y88b.      888            888     888     888 888    888           #
#           "Y888b.   8888888        888     888     888 888   d88P           #
#              "Y88b. 888            888     888     888 8888888P"            #
#                "888 888            888     888     888 888                  #
#          Y88b  d88P 888            888     Y88b. .d88P 888                  #
#           "Y8888P"  8888888888     888      "Y88888P"  888                  #
#                                                                             #
###############################################################################
# This script details my post-install process, and is mostly in order of ops  #
# There are as many notes as there are commands, and it is NOT designed       #
#  to be run, but rather copied and referenced after a fresh-install          #
###############################################################################


#=============================================================================#
#                     Preinstallation Steps and Notes                         #
#=============================================================================#

# Installation Media
#-----------------------------
#===== Bootable ISO
#  * TRIED: Rufus (windows only), unetbootin (trash), dd, "bootiso" (trash), gparted
#  * WORKS: UUI, distro-provided tools (tails, kali, etc), etcher

#===== Troubleshooting
# If things are failing with the USB
#  * try a different, non-3.0 port
#  * not a "hub" port, like the front ones near power or otherwise joint hubs
#  * insure USB is FAT32, MBR table (GPR never works)



# Installer
#-----------------------------
#===== Options
# - DO NOT CONNECT TO INTERNET/DOWNLOAD DURING INSTALL
#   - Remove bloat first
#     ONLY AFTER REMOVING BLOAT, should you even connect to internet
#
# - Do not install 3rd party shit (for wifi/video/flash etc)
#   - you can install what you need later, and flash 2018 lol


# Remove useless shit from default PATH
#--------------------------------------
#===== /usr/games
sudo vi /etc/environment
# delete '/usr/games:/usr/local/games' near the end
px="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
py="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# Smarter path add funcs
# ======================
# These functions will only add something to path IF it
#  is not present in path already
path_append() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="${PATH:+"$PATH:"}$1"
    fi
}
path_prepend() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+:${PATH}}"
    fi
}


#=============================================================================#
#                               Remove Bloat                                  #
#=============================================================================#
# - During this process, all '*desktop' packages will likely get removed.
#   - this includes: gnome-desktop, mate-desktop, xubuntu-desktop
#     * DON'T WORRY! These packages are just the bundles of default apps
#       That come with those respective desktops

# Desktop and Apps
#-----------------------------
# Note: there may be some redundancy
#===== Default desktop shit: Apps, libraries
sudo apt remove --purge mate-desktop-common mate-calc-common mate-calc libgnome-games-support-common
sudo apt remove --purge gnome-*
sudo apt remove --purge "*mate-desktop*"
sudo apt remove --purge "*firefox*" "transmission-*" "*pidgin*" "*parole*" "*xfburn*" "*libreoffice*"
sudo apt remove --purge "hplip*" "sgt*" "snapd*" simple-scan "thunderbird*" "*yelp*"
sudo apt remove --purge catfish devhelp glade xul-ext-ubufox

# Printer shit
#--------------
sudo apt remove --purge printer-driver-splix printer-driver-sag-gdi \
printer-driver-pxljr printer-driver-ptouch printer-driver-pnm2ppa \
printer-driver-min12xxw printer-driver-m2300w printer-driver-foo2zjs-common \
printer-driver-foo2zjs printer-driver-c2esp

#=============================================================================#
#                  Package manager setup and helpful aliases                  #
#=============================================================================#

# Apt fast
#------------------------------------------------------------------------------
sudo add-apt-repository ppa:apt-fast/stable
sudo apt update
sudo apt install apt-fast
sed -i "$ a MIRRORS=( 'http://mirror.picosecond.org/ubuntu/, http://mirror.enzu.com/ubuntu/, http://la-mirrors.evowise.com/ubuntu/, http://mirrors.ocf.berkeley.edu/ubuntu/, http://mirror.math.ucdavis.edu/ubuntu/' )" /etc/apt-fast.conf

#==== APT-REPO
addrep(){
    sudo add-apt-repository "ppa:$1" -y
    sudo apt-fast update
}


#-----------------------------------------------------------------------------#
#                                     GCC                                     #
#-----------------------------------------------------------------------------#
addrep 'ubuntu-toolchain-r/test' # Don't need repo if on 18.04
gcc-7 g++-7 gcc-8 g++-8 --install-suggests
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 80 --slave /usr/bin/g++ g++ /usr/bin/g++-7
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-8
update-alternatives --set gcc /usr/bin/gcc-8

#=============================================================================#
#                       Utils & Common Dependencies                           #
#=============================================================================#

# git
# ===
addrep git-core/ppa
sudo apt update && sudo apt upgrade -y
sudo apt install git-core
~
# Deps
sudo apt install -y wget curl git-core apt-transport-https autoconf automake \
build-essential cmake docbook2x dvipng extra-cmake-modules gfortran graphviz \
imagemagick libarchive-dev libatomic1 libbz2-dev libcurl4-openssl-dev \
libncurses5-dev libreadline-dev librsvg2-bin libre2-dev libsqlite3-dev \
libssl-dev libxcb-keysyms1-dev llvm m4 make p7zip-full p7zip-rar perl \
pkg-config python-sphinx qt5-default qt5-qmake qttools5-dev-tools redis-server \
redis-tools software-properties-common texlive-xetex tk-dev xz-utils zlib1g-dev \
printer-driver-brlaser


#=============================================================================#
#                                                                             #
#                         888888  88b 88  Yb    dP                            #
#                         88__    88Yb88   Yb  dP                             #
#                         88""    88 Y88    YbdP                              #
#                         888888  88  Y8     YP                               #
#                                                                             #
#=============================================================================#



# Oh-my-zsh
# =========
sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)";
cd ~/.oh-my-zsh/custom/plugins
git clone https://github.com/jocelynmallon/zshmarks.git

# Pyenv
# =====
curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash;
#### BEFORE INSTALLING ALL PIP PACKAGES IN VENV:
# pyinstaller is bugged, so you have to hold it's hand
pip install pip==18.1 # installation will fail if pip==19 (latest)
pip install pyinstaller
pip install -U pip # then you just update right after...


# System python
# =============
#---- install latest py3
sudo apt install -y python3.7

#---- install alternatives
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.7 80
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 50
sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 20

#---- select
sudo update-alternatives --config python


# n (node manager)
# ================
curl -L https://git.io/n-install | N_PREFIX=~/.n bash -s -- -y


#=============================================================================#
#                                                                             #
#                  db                                                         #
#                 d88b                                                        #
#                d8'`8b                                                       #
#               d8'  `8b      8b,dPPYba,   8b,dPPYba,   ,adPPYba,             #
#              d8YaaaaY8b     88P'    "8a  88P'    "8a  I8[    ""             #
#             d8""""""""8b    88       d8  88       d8   `"Y8ba,              #
#            d8'        `8b   88b,   ,a8"  88b,   ,a8"  aa    ]8I             #
#           d8'          `8b  88`YbbdP"'   88`YbbdP"'   `"YbbdP"'             #
#                             88           88                                 #
#                             88           88                                 #
#                                                                             #
#=============================================================================#

####### BINARIES, APPIMAGES, ELECTRON ######
code-notes.AppImage
draw.io.AppImage

####### LOOK INTO & EXTRA #######
koreader.AppImage         # kobo software
p3x-onenote-2019.AppImage # onenote clone
polar-bookshelf.AppImage  # ebook progress library manager thign
raven-reader.AppImage     # clean feed reader
stencila-desktop.AppImage # scholarly all-in-one office thing, has potential
themer-gui.AppImage       # select a colorset, and it generates CSS for everything

vym # "view your mind", concept mapping n stuff
TiddlyDesktop


# bookstack (docker)

# GROBID
wget https://github.com/kermitt2/grobid/archive/0.5.3.zip


#-----------------------------------------------------------------------------#
#                                              dP                             #
#                                              88                             #
#                          .d8888b. 88d888b. d8888P                           #
#                          88'  `88 88'  `88   88                             #
#                          88.  .88 88.  .88   88                             #
#                          `88888P8 88Y888P'   dP                             #
#                                   88                                        #
#                                   dP                                        #
#-----------------------------------------------------------------------------#



# Apps
# ====
# NB: check guake version first (apt ver typically outdated)
sudo apt install -y chromium-browser flameshot anki vim guake git-extras
sudo apt install -y deluge nomacs font-manager redshift

# Utils
# =====
sudo apt-fast install -y htop tree tlp unar unrar psensor aria2 poppler-utils wkhtmltopdf img2pdf deborphan xclip copyq
#sudo apt install -y htop tree tlp unar unrar psensor aria2 poppler-utils
#sudo apt install -y wkhtmltopdf img2pdf deborphan
#sudo apt install -y xclip copyq # xfce4-clipman is good too

# Media
# =====
sudo apt install -y exfat-utils flac lame x264 vlc mpv inkscape

# Fonts
# =====
sudo apt install -y fonts-hack fonts-oxygen fonts-noto-cjk-extra "fonts-sawarabi*" \
fonts-mplus fonts-mononoki "fonts-moe*" fonts-umeplus \
fonts-woowa-hanna "fonts-wqy*" fonts-ebgaramond-extra fonts-cantarell \
"fonts-aoyagi*" fonts-ipafont fonts-seto fonts-misaki fonts-mikachan \
"fonts-takao*" fonts-lato fonts-stix \
texlive-fonts-recommended texlive-latex-recommended \
fonts-umeplus fonts-hanazono

# Dictionaries
# ============
sudo apt install -y dict dictd dict-gcide dict-wn dict-moby-thesaurus

#======#
# PPAs #
#======#

# Ghostwriter
# ===============
addrep wereturtle/ppa
ghostwriter


#-----------------------------------------------------------------------------#
#                           Independent Installers                            #
#-----------------------------------------------------------------------------#
# Joplin
# ======
wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh | bash

# npm
# ---
npm i -g npm && npm i -g electron nativefier tldr lorem-ipsum
#npm i -g electron
#npm i -g nativefier
#npm i -g tldr
#npm i -g lorem-ipsum


# croc
# ====
curl https://getcroc.schollz.com | bash

# fzf
# ===
git clone --depth=1 https://github.com/junegunn/fzf.git ~/.Apps/utils/fzf

# Z jump
# ======
wget -O ~/.Apps/utils/Z_jump.sh https://raw.githubusercontent.com/rupa/z/master/z.sh

#-----------------------------------------------------------------------------#
#                   Independent Installers + extra steps                      #
#-----------------------------------------------------------------------------#

# borg
# ====
# (terminal snippet manager)
wget https://github.com/ok-borg/borg/releases/download/v0.0.3/borg_linux_amd64 -O $HOME/.local/bin/borg
chmod 755 $HOME/.local/bin/borg

# Sublime Text 3
# ===============
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -;
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list;
sudo apt update && sudo apt install sublime-text -y

# Misc debs
# =========
#---- bat
wget https://github.com/sharkdp/bat/releases/download/v0.9.0/bat_0.9.0_amd64.deb
sudo dpkg -i bat_0.9.0_amd64.deb



#=============================================================================#
#                                                                             #
#         88888888888                                                         #
#         88                          ,d                                      #
#         88                          88                                      #
#         88aaaaa      8b,     ,d8  MM88MMM  8b,dPPYba,  ,adPPYYba,           #
#         88"""""       `Y8, ,8P'     88     88P'   "Y8  ""     `Y8           #
#         88              )888(       88     88          ,adPPPPP88           #
#         88            ,d8" "8b,     88,    88          88,    ,88           #
#         88888888888  8P'     `Y8    "Y888  88          `"8bbdP"Y8           #
#                                                                             #
#                                                                             #
#          ad88888ba                                                          #
#         d8"     "8b                ,d                                       #
#         Y8,                        88                                       #
#         `Y8aaaaa,     ,adPPYba,  MM88MMM  88       88  8b,dPPYba,           #
#           `"""""8b,  a8P_____88    88     88       88  88P'    "8a          #
#                 `8b  8PP"""""""    88     88       88  88       d8          #
#         Y8a     a8P  "8b,   ,aa    88,    "8a,   ,a88  88b,   ,a8"          #
#          "Y88888P"    `"Ybbd8"'    "Y888   `"YbbdP'Y8  88`YbbdP"'           #
#                                                        88                   #
#                                                        88                   #
#                                                                             #
#=============================================================================#




#=============================================================================#
#                       ,,                                                    #
#                      *MM                                                    #
#                       MM                                                    #
#             `7Mb,od8  MM,dMMb.   .gP"Ya  `7MMpMMMb.  `7M'   `MF'            #
#               MM' "'  MM    `Mb ,M'   Yb   MM    MM    VA   ,V              #
#               MM      MM     M8 8M""""""   MM    MM     VA ,V               #
#               MM      MM.   ,M9 YM.    ,   MM    MM      VVV                #
#             .JMML.    P^YbmdP'   `Mbmmd' .JMML  JMML.     W                 #
#                                                                             #
#=============================================================================#

# INSTALLATION
# ============

# 1 - Use the installer
wget -q https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer -O- | bash

# 2 - Update shell config for rbenv path and init
#---- Path
PATH="${PATH:+"$PATH:"}$HOME/.rbenv/bin"
# The "official" way:
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.zshrc
#---- init
eval "$(rbenv init -)"


# 4 - Install a ruby version
rbenv install -l   # list all ruby versions available
rbenv install 2.5.3

# 5 - Local your rbenv ver and check gems path
rbenv local 2.5.3
gem env home  # should show rbenv
#  /home/evan/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0

# 6 - install gems
gem install bundler


#=============================================================================#
#                                  ,,                                         #
#                                 *MM                                         #
#                                  MM                                         #
#               ,pP"Ybd   ,p6"bo   MM,dMMb.  `7M'    ,A    `MF'               #
#               8I   `"  6M'  OO   MM    `Mb   VA   ,VAA   ,V                 #
#               `YMMMa.  8M        MM     M8    VA ,V  VA ,V                  #
#               L.   I8  YM.    ,  MM.   ,M9     VVV    VVV                   #
#               M9mmmP'   YMbmd'   P^YbmdP'       W      W                    #
#                                                                             #
#=============================================================================#
#-----------------------------------------------------------------------------#
#                                   DOCKER                                    #
#-----------------------------------------------------------------------------#

# Instructions from SCBW
#   github.com/Games-and-Simulations/sc-docker
# =======================
sudo apt update
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common

#=== add docker repository
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

#=== install docker
sudo apt update
sudo apt install -y docker-ce=17.09.0~ce-0~ubuntu # NB: this ver pkg was UNAVAILABLE

#=== Make sure you can run docker without sudo
sudo usermod -aG docker $USER
# Restart shell
docker run hello-world

#-----------------------------------------------------------------------------#
#                                Python Setup                                 #
#-----------------------------------------------------------------------------#

# Steps here different, assuming you have pyenv
pip install scbw
scbw.play --install  # This can take awhile, download n install


#-----------------------------------------------------------------------------#
#                            GUI setup: VNC Viewer                            #
#-----------------------------------------------------------------------------#
#=== Download VNC Viewer @   https://www.realvnc.com/en/connect/download/viewer/linux/
# eg: https://www.realvnc.com/download/file/viewer.files/VNC-Viewer-6.18.907-Linux-x64.deb

#######    IF YOU DOWNLOADED THE .deb,  INSTEAD OF BINARY             #########

#  VNC viewer is launched via 'vncviewer' through the deb install
#  However, scbw launches through 'vnc-viewer', so you need to symlink to same dir
#   >>-----> ln -s /usr/bin/vncviewer /usr/bin/vnc-viewer
#   * the scbw instructions say to symlink the binary to /usr/bin as 'vnc-viewer'
#   * the .deb is actually launched by 'vncviewer'


# FINALLY: watch a match between two bots!
#  (in headful mode, you must select the map, wait in lobby for bots to join, and start)
scbw.play --bots "krasi0" "CherryPi" --show_all


#=============================================================================#
#            ,,                                                ,,             #
#           *MM                                                db             #
#            MM                                                               #
#            MM,dMMb.  `7M'    ,A    `MF' ,6"Yb.  `7MMpdMAo. `7MM             #
#            MM    `Mb   VA   ,VAA   ,V  8)   MM    MM   `Wb   MM             #
#            MM     M8    VA ,V  VA ,V    ,pm9MM    MM    M8   MM             #
#            MM.   ,M9     VVV    VVV    8M   MM    MM   ,AP   MM             #
#            P^YbmdP'       W      W     `Moo9^Yo.  MMbmmd'  .JMML.           #
#                                                   MM                        #
#                                                 .JMML.                      #
#                                                                             #
#=============================================================================#
# Clone and make
# ==============
git clone https://github.com/openbw/openbw
git clone https://github.com/openbw/bwapi
cd bwapi
mkdir build
cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENBW_DIR=../../openbw -DOPENBW_ENABLE_UI=1
make

# GUI setup
# =========
sudo apt install libsdl2-dev

# OpenBW needs the usual 3 mpq files in the working directory when it starts
# (Stardat.mpq, Broodat.mpq and Patch_rt.mpq). These can be copied from
# StarCraft: BroodWar 1.16.1 or 1.18, or you can just start BWAPILauncher from the StarCraft directory.

# I remember this being a HUGE PITA before sourcing these files
#  you probably have on ext hdd, CHECK



#=============================================================================#
#                                                                             #
#                     `7MM"""Mq.    .g8""8q.    .M"""bgd                      #
#                       MM   `MM. .dP'    `YM. ,MI    "Y                      #
#                       MM   ,M9  dM'      `MM `MMb.                          #
#                       MMmmdM9   MM        MM   `YMMNq.                      #
#                       MM  YM.   MM.      ,MP .     `MM                      #
#                       MM   `Mb. `Mb.    ,dP' Mb     dM                      #
#                     .JMML. .JMM.  `"bmmd"'   P"Ybmmd"                       #
#                                                                             #
#=============================================================================#

# Add ROS source to apt sources
# -----------------------------
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
sudo apt update

# Install and initialize
# ----------------------
sudo apt install ros-melodic-desktop-full
sudo rosdep init # requires python2
rosdep update # do not sudo this

# Env setup
# ---------
# in zshrc:
source /opt/ros/melodic/setup.zsh
# for rosinstall (only need python-rosinstall I think, other shit may be bloat)
sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential

#                               _
#   __ _    __ _   ____   ___  | |__     ___
#  / _` |  / _` | |_  /  / _ \ | '_ \   / _ \
# | (_| | | (_| |  / /  |  __/ | |_) | | (_) |
#  \__, |  \__,_| /___|  \___| |_.__/   \___/
#  |___/

# ****NB**** Gazebo may already be installed if you do ros-full

# Install and run
# ---------------
curl -sSL http://get.gazebosim.org | sh
gazebo




#=======================================================================================#
#      ad88888ba                                                                        #
#     d8"     "8b                            ,d                                         #
#     Y8,                                    88                                         #
#     `Y8aaaaa,    8b       d8  ,adPPYba,  MM88MMM   ,adPPYba,  88,dPYba,,adPYba,       #
#       `"""""8b,  `8b     d8'  I8[    ""    88     a8P_____88  88P'   "88"    "8a      #
#             `8b   `8b   d8'    `"Y8ba,     88     8PP"""""""  88      88      88      #
#     Y8a     a8P    `8b,d8'    aa    ]8I    88,    "8b,   ,aa  88      88      88      #
#      "Y88888P"       Y88'     `"YbbdP"'    "Y888   `"Ybbd8"'  88      88      88      #
#                      d8'                                                              #
#                     d8'                                                               #
#                                                                                       #
#   ad88888ba                                 88                                        #
#  d8"     "8b                ,d       ,d     ""                                        #
#  Y8,                        88       88                                               #
#  `Y8aaaaa,     ,adPPYba,  MM88MMM  MM88MMM  88  8b,dPPYba,    ,adPPYb,d8  ,adPPYba,   #
#    `"""""8b,  a8P_____88    88       88     88  88P'   `"8a  a8"    `Y88  I8[    ""   #
#          `8b  8PP"""""""    88       88     88  88       88  8b       88   `"Y8ba,    #
#  Y8a     a8P  "8b,   ,aa    88,      88,    88  88       88  "8a,   ,d88  aa    ]8I   #
#   "Y88888P"    `"Ybbd8"'    "Y888    "Y888  88  88       88   `"YbbdP"Y8  `"YbbdP"'   #
#                                                               aa,    ,88              #
#                                                                "Y8bbdP"               #
#                                                                                       #
#=======================================================================================#

# Fix slow-start debian bug
# =========================
# apt-daily
# ---------
sudo systemctl edit apt-daily.timer
# Paste into edit:
# apt-daily timer configuration override
[Timer]
OnBootSec=15min
OnUnitActiveSec=1d
AccuracySec=1h
RandomizedDelaySec=30min

# Network manager
# ---------------
sudo systemctl disable NetworkManager-wait-online.service

# Disable CDROM Eject Buttom
# ==========================
eject -i 1 /dev/sr0  # assign as app autostart


# Keyboard
# ========
#---- Volume
amixer set Master 5%-  # Alt+-
amixer set Master 5%+  # Alt+=
#---- misc/app
flameshot gui    # Print
echo 'keycode 118 = ' > ~/.Xmodmap # disable insert key


# Thunar custom actions
# =====================
#---- Replace spaces, format name to all lower
for file in %N; do mv "$file" "$(echo "$file" | tr -s ' ' | tr ' A-Z' '-a-z' | tr -s '-' | tr -c '[:alnum:][:cntrl:].' '-')"; done

#---- Open directory in sublime
/usr/bin/subl .

#---- Copies full pathname for a file or folder  to clipboard
echo -n %f | xclip -selection "clipboard"

#---- Touch .txt
/usr/bin/touch notes.txt

#---- Open guake here
guake -n '%d%f ' -r "%f " --show -e "cd '%f' && ls -1FSshX --file-type"



# Japanese IME (mozc)
# ===================
# mozc  # (THIS WAS FOR 16.04)
#If you have Xubuntu 16.04 installed and want to be able to type Japanese, try the following steps:
#1. Go to "Settings" and then "Language Support": click the button "install/remove languages" and choose Japanese.
#2. Change the "Keyboard input method system" (same menu) to "fcitx". "Close" window.
#3. Go to "Keyboard", choose the "Layout" tab, and "Add" Japanese. Make sure "use system default" is untoggled. "Close" window (I'm not sure this step is necessary, but I did it anyway)
#4. Go to "Settings" and then "Fcitx Configuration", under the tab "Input method" click "+". Untoggle "only show current language" and choose "Mozc Japanese" from the list. (I had to scroll throught the entire list to find this. It doesn't start with "Keyboard - " like the other options.)
#5. Go to the tab "Global config" in the same window and look which keys trigger the Japanese input method. The default on my computer is CTRL+Space. Alternatively, a keyboard icon should be visible in the panel where you can select "Input method" - "Mozc"
#I admit to restarting my computer a few times inbetween some of the steps. I'm not sure if it is necessary.
#I don't remember ever installing "Mozc" and "Fcitx", I think they came with the system/Japanese language support.

# in Language Support > regional formats > display numbers usual format for japanese
# orage clock format: %x %R
# https://www.linuxquestions.org/questions/slackware-14/xfce-clock-custom-formatting-codes-753433/
# previous: %d %b, %H:%M





#=============================================================================#
#                                                                             #
#        .d8888b.      8888888b.     888     888                              #
#       d88P  Y88b     888   Y88b    888     888                              #
#       888    888     888    888    888     888                              #
#       888            888   d88P    888     888                              #
#       888  88888     8888888P"     888     888                              #
#       888    888     888           888     888                              #
#       Y88b  d88P     888           Y88b. .d88P                              #
#        "Y8888P88     888            "Y88888P"                               #
#                                                                             #
#        .d8888b.     8888888888   88888888888   888     888    8888888b.     #
#       d88P  Y88b    888              888       888     888    888   Y88b    #
#       Y88b.         888              888       888     888    888    888    #
#        "Y888b.      8888888          888       888     888    888   d88P    #
#           "Y88b.    888              888       888     888    8888888P"     #
#             "888    888              888       888     888    888           #
#       Y88b  d88P    888              888       Y88b. .d88P    888           #
#        "Y8888P"     8888888888       888        "Y88888P"     888           #
#                                                                             #
#=============================================================================#


#=============================================================================#
#                     ___   _   _   ___      _                                #
#                    / __| | | | | |   \    /_\                               #
#                   | (__  | |_| | | |) |  / _ \                              #
#                    \___|  \___/  |___/  /_/ \_\                             #
#               ======================================                        #

#------------------------------------------------------------------------------
#   __ ___       __  ___
#  (_   |   /\  |__)  |
#  __)  |  /--\ | \   |

#==== Install from network deb (downloaded)
sudo dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
#sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub

sudo apt update
sudo apt install cuda-10-0


# "Recommended Packages"
#libnvidia-compute-410:i386 libnvidia-decode-410:i386 libnvidia-encode-410:i386 libnvidia-ifr1-410:i386 libnvidia-fbc1-410:i386 libnvidia-gl-410:i386


#==== Update path
# Now, add the following lines to your shell config (.zshrc, etc)
export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

#==== Reboot to finish installation
reboot

#==== Verify installation
nvcc -V
nvidia-smi

#==== If nouveau is an issue:
# Create a file at /etc/modprobe.d/blacklist-nouveau.conf with the following contents:
blacklist nouveau
options nouveau modeset=0

# Regenerate the kernel initramfs:
sudo update-initramfs -u

#   __       __
#  |_  |\ | |  \
#  |__ | \| |__/
#------------------------------------------------------------------------------





#=============================================================================#
#                               ___    _  _   _  _                            #
#                   __   _  _  |   \  | \| | | \| |                           #
#                  / _| | || | | |) | | .` | | .` |                           #
#                  \__|  \_,_| |___/  |_|\_| |_|\_|                           #
#               ======================================                        #

#------------------------------------------------------------------------------
#   __ ___       __  ___
#  (_   |   /\  |__)  |
#  __)  |  /--\ | \   |

#==== cuDNN
# tar file method:
tar -xzvf cudnn-10.0-linux-x64-v7.3.1.20.tgz # whatever ver you got
sudo cp cuda/include/cudnn.h /usr/local/cuda/include
sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*

#==== Verify cuDNN installation
#  For cuDNN 7.3, you should see CUDNN_MAJOR 7, CUDNN_MINOR 3
cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2

#   __       __
#  |_  |\ | |  \
#  |__ | \| |__/
#------------------------------------------------------------------------------





#=============================================================================#
#           _____                                 ___   _____                 #
#          |_   _|  ___   _ _    ___  ___   _ _  | _ \ |_   _|                #
#            | |   / -_) | ' \  (_-< / _ \ | '_| |   /   | |                  #
#            |_|   \___| |_||_| /__/ \___/ |_|   |_|_\   |_|                  #
#               ======================================                        #


#------------------------------------------------------------------------------
#   __ ___       __  ___
#  (_   |   /\  |__)  |
#  __)  |  /--\ | \   |

#==== TensorRT
sudo dpkg -i nv-tensorrt-repo-ubuntu1804-cuda10.0-trt5.0.0.10-rc-20180906_1-1_amd64.deb
sudo apt update
sudo apt install tensorrt
sudo apt install uff-converter-tf

#==== Verify installation
dpkg -l | grep TensorRT


#   __       __
#  |_  |\ | |  \
#  |__ | \| |__/
#------------------------------------------------------------------------------






#=============================================================================#
#                      _  _    ___    ___   _                                 #
#                     | \| |  / __|  / __| | |                                #
#                     | .` | | (__  | (__  | |__                              #
#                     |_|\_|  \___|  \___| |____|                             #
#               ======================================                        #






#=============================================================================#
#                                                                             #
#     88                        88  88           88                  ad88     #
#     88                        ""  88           88        ,d       d8"       #
#     88                            88           88        88       88        #
#     88,dPPYba,   88       88  88  88   ,adPPYb,88      MM88MMM  MM88MMM     #
#     88P'    "8a  88       88  88  88  a8"    `Y88        88       88        #
#     88       d8  88       88  88  88  8b       88        88       88        #
#     88b,   ,a8"  "8a,   ,a88  88  88  "8a,   ,d88        88,      88        #
#     8Y"Ybbd8"'    `"YbbdP'Y8  88  88   `"8bbdP"Y8        "Y888    88        #
#                                                                             #
#=============================================================================#


#                ___   _____   ___   ___     _                                #
#               / __| |_   _| | __| | _ \   / |                               #
#               \__ \   | |   | _|  |  _/   | |                               #
#               |___/   |_|   |___| |_|     |_|                               #
#            =====================================                            #
#             ---> Install bazel

#==== Install the JDK:
sudo apt install openjdk-8-jdk

#==== Add Bazel distribution URI as a package source:
echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -

#==== Install Bazel
sudo apt update && sudo apt install bazel


#  .bazelrc:
#==== startup args come before commands like "build"
# Now outputs to /tmp/bazel INSTEAD of ~/.cache
startup --output_user_root=/tmp/bazel



#=============================================================================#
#=============================================================================#
#=============================================================================#



#=============================================================================#
#             88b           d88  88   ad88888ba     ,ad8888ba,                #
#             888b         d888  88  d8"     "8b   d8"'    `"8b               #
#             88`8b       d8'88  88  Y8,          d8'                         #
#             88 `8b     d8' 88  88  `Y8aaaaa,    88                          #
#             88  `8b   d8'  88  88    `"""""8b,  88                          #
#             88   `8b d8'   88  88          `8b  Y8,                         #
#             88    `888'    88  88  Y8a     a8P   Y8a.    .a8P               #
#             88     `8'     88  88   "Y88888P"     `"Y8888Y"'                #
#                                                                             #
#=============================================================================#

# NATIVEFIER
# ==========
#===== Google
nativefy "https://mail.google.com" -n gmail -t -c
nativefy "https://drive.google.com" -n google-drive
nativefy "https://keep.google.com" -n google-keep -u 3
nativefy "https://www.simplyhired.com/" -n simply-hired
nativefy "https://calendar.google.com" -n google-calendar
nativefy "https://airtable.com/" -n airtable
nativefy "https://www.hackerrank.com/dashboard" -n hacker-rank
nativefy "https://www.semanticscholar.org/" -n semantic-scholar
#nativefier "https://mail.google.com" -n gmail -a x64 -p linux --honest -m --single-instance --tray --counter
#nativefier "https://drive.google.com" -n google-drive -a x64 -p linux --honest -m --single-instance --internal-url 3 -i /home/evan/Chest/Resources/Icons/google-drive.png
#nativefier "https://keep.google.com" -n google-keep -a x64 -p linux --honest -m --single-instance --tray -i /home/evan/Chest/Resources/Icons/google_keep_icon.png
#nativefier "https://calendar.google.com" -n google-calendar -a x64 -p linux --honest -m --single-instance --tray -i /home/evan/Chest/Resources/Icons/google-calendar.png

#====== Blog/read
# ...just use a damn rss reader
# nativefier "https://deepmind.com/blog/" -n deepmind-blog -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/deepmind_logo_swirl_blue.png
# nativefier "https://blog.openai.com/" -n openai-blog -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/openai.png
# nativefier "https://ai.google/research/pubs/" -n google-ai -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/googleAi-icon

#====== Job stuff
#nativefier "https://www.simplyhired.com/" -n simply-hired -a x64 -p linux --honest -m -i /home/evan/Chest/Resources/Icons/SimplyHired-icon.png
#nativefier "https://www.linkedin.com/uas/login" -p linux -a x64 -n linkedin --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/linkedin.png
#nativefier "https://airtable.com/" -n airtable -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/airtable.png
#
##====== Other
#nativefier "https://www.hackerrank.com/dashboard" -n hacker-rank -a x64 -p linux --honest -m -i /home/evan/Chest/Resources/Icons/HackerRank_logo.png

# Openssh (local) server
#=======================
sudo apt install openssh-server;
sudo service ssh status;
sudo vi /etc/ssh/sshd_config; # change port from 22 to 2501
sudo systemctl restart sshd.service;
hostname -I; # get ip
# copy ssh-id from non-server machine
ssh-copy-id evan@remotehost;
sudo vi /etc/ssh/sshd_config; # disable password auth
sudo systemctl restart sshd.service;

# Reminiscence
#=============
# need ---> venv (pyenv), wkhtmltopdf, redis-server (optional)
mkdir reminiscence
cd reminiscence
pyenv virtualenv 3.7.0 reminiscence
pyenv local reminiscence
git clone --depth=1 https://github.com/kanishka-linux/reminiscence.git
cd reminiscence
pip install -r requirements.txt
mkdir logs archive tmp
python manage.py generatesecretkey
python manage.py nltkdownload
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver 127.0.0.1:8000
# open 127.0.0.1:8000 using any browser, login and start adding links

#**Note:** replace localhost address with local ip address of your server
#          to access web-interface from anywhere on the local network

# grab-site
#=============
sudo apt update
sudo apt install --no-install-recommends git build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev libffi-dev libxml2-dev libxslt1-dev libre2-dev pkg-config
pip install --process-dependency-links --no-binary --upgrade git+https://github.com/ludios/grab-site


# Chromium extensions
#====================
# To see all installed extensions, navigate to: chrome://system
"Arc Dark"
"Archiveror"
"arXiv bib overlay"
"Awesome Stars"
"Backspace to go Back"
"Better Bookmark"
"Bookmarks clean up"
"Close Tabs to the Left"
"Copy All Urls"
"Dark Reader"
"Gibbon Tabs"
"GitHub Downloader"
"Github Original Streak"
"HTTPS Everywhere"
"Joplin Web Clipper"
"Like on GitHub"
"Linkclump"
"Lovely forks"
"Math Anywhere"
"Old Reddit Redirect"
"Privacy Badger"
"py3redirect"
"Redirectify"
"Refined GitHub"
"rikaikun"
"Save to Polar"
"Sight"
"Tab Ahead"
"Tab Save"
"uBlock Origin Extra"
"uBlock Origin"
"View Image"
"WARCreate"
"Wide Github"
"WikiMapper"
"Wikipedia Reading Lists"
"xBrowserSync"


#-----------------------------#
#                 _       _   #
#   ___   _   _  | |__   | |  #
#  / __| | | | | | '_ \  | |  #
#  \__ \ | |_| | | |_) | | |  #
#  |___/  \__,_| |_.__/  |_|  #
#                             #
#-----------------------------#

# user settings
# =============
#{
#    "always_show_minimap_viewport": true,
#    "auto_find_in_selection": true,
#    "bold_folder_labels": true,
#    "caret_extra_width": 2,
#    "caret_style": "smooth",
#    "color_scheme": "Packages/Colorsublime - Themes/cache/Colorsublime-Themes-master/themes/Piodine.tmTheme",
#    "detect_indentation": false,
#    "draw_minimap_border": true,
#    "ensure_newline_at_eof_on_save": true,
#    "font_face": "Hack",
#    "font_size": 12,
#    "highlight_line": true,
#    "hot_exit": false,
#    "ignored_packages":
#    [
#        "RestructuredText",
#        "Vintage"
#    ],
#    "index_files": false,
#    "material_theme_accent_bright-teal": true,
#    "material_theme_accent_scrollbars": true,
#    "material_theme_accent_titlebar": true,
#    "material_theme_bold_tab": true,
#    "material_theme_bright_scrollbars": true,
#    "material_theme_compact_panel": true,
#    "material_theme_contrast_mode": true,
#    "material_theme_panel_separator": true,
#    "material_theme_small_statusbar": true,
#    "material_theme_small_tab": true,
#    "material_theme_tabs_autowidth": true,
#    "material_theme_tabs_separator": true,
#    "material_theme_titlebar": true,
#    "preview_on_click": false,
#    "rulers":
#    [
#        79
#    ],
#    "tab_size": 4,
#    "theme": "Material-Theme.sublime-theme",
#    "translate_tabs_to_spaces": true,
#    "trim_trailing_white_space_on_save": true
#}


# Sublime themes
#======================
# Almost all themes come from the ColorSublime package
#  (which, in turn, sources from textmate themes I believe)

#==== Dark
#  ** piodine **          # The one, the only. Awesome, clear, colors. everything looks good!
#  oceanic-reef/next *    # reef better, but comments nearly unreadable; next is a litte too desat
#  Bijan **               # clean, readable, softish colors, slate background
#  Foggy-Evening *        # vibrant colors, really pops, not great syntax for py
#  gooey **               # very clear, nice colors (bit boring), nice slate dark
#  Easyballs *            # simple, clean, readable
#  Wildlife-Night */*     # (RST) very clear, comment highlighting

#==== Medium & desat (or weird)
#  mutedrainbow_sky **    # nice "adventure-time"-esque scheme, syntax supp could be better
#  nouba *                # (PLAINTEXT) HEAVY contrast, very strong highlight
#  Atomic - Light(Soft) * # similar to github-v2
#  wild-cherry *          # good contrast, colors are a bit soft, purple-base, very strong highlight

#==== Light
#  Github-v2  ***         # Favorite light; syntax supp could be better, but love the yellowish/offwhite scheme
#  ArtSchool *            # Almost too bright; very clear easy to read, white bkgrd, bright colors
#  Celeste *              # very bright, light colors, clear, white
#  Butterfly **           # like a better celeste, clearer, more sat colors
#  softly **              # nice off-white, good highlight, overall clear
#  spring ***             # uses bold!, off-white, good color, highlighting, very nice
#  eiffel **              # off-white, great contrast, could have better syn supp

# Sublime packages
# ================
# A File Icon
# Colorsublime
# Cython+
# Material Theme
# Package Control
# PackageResourceViewer
# RestructuredText Improved
# SidebarEnhancements
