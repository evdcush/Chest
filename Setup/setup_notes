#!/bin/bash

#                                                                             #
#                                  __                                         #
#                                 /\ \__                                      #
#                   ____     __   \ \ ,_\   __  __   _____                    #
#                  /',__\  /'__`\  \ \ \/  /\ \/\ \ /\ '__`\                  #
#                 /\__, `\/\  __/   \ \ \_ \ \ \_\ \\ \ \L\ \                 #
#                 \/\____/\ \____\   \ \__\ \ \____/ \ \ ,__/                 #
#                  \/___/  \/____/    \/__/  \/___/   \ \ \/                  #
#                                                      \ \_\                  #
#                                                       \/_/                  #
#                                                                             #
#                                                                             #




#   __       ___
#  |__)  /\   |  |__|
#  |    /~~\  |  |  |
#  ------------------



# Smarter path add funcs
# ======================
# These functions will only add something to path IF it
#  is not present in path already
path_append() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="${PATH:+"$PATH:"}$1"
    fi
}
path_prepend() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+:${PATH}}"
    fi
}

#=============================================================================#
#                            _                                                #
#                           | |                                               #
#                     _ __  | |__     ___   _ __   __   __                    #
#                    | '__| | '_ \   / _ \ | '_ \  \ \ / /                    #
#                    | |    | |_) | |  __/ | | | |  \ V /                     #
#                    |_|    |_.__/   \___| |_| |_|   \_/                      #
#                                                                             #
#=============================================================================#



# INSTALLATION
# ============

# 1 - Use the installer
wget -q https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer -O- | bash

# 2 - Update shell config for rbenv path and init
#---- Path
PATH="${PATH:+"$PATH:"}$HOME/.rbenv/bin"
# The "official" way:
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.zshrc
#---- init
eval "$(rbenv init -)"


# 4 - Install a ruby version
rbenv install -l   # list all ruby versions available
rbenv install 2.5.3

# 5 - Local your rbenv ver and check gems path
rbenv local 2.5.3
gem env home  # should show rbenv
#  /home/evan/.rbenv/versions/2.5.3/lib/ruby/gems/2.5.0

# 6 - install gems
gem install bundler


#=============================================================================#
#                     _____    _____   ____   __          __                  #
#                    / ____|  / ____| |  _ \  \ \        / /                  #
#                   | (___   | |      | |_) |  \ \  /\  / /                   #
#                    \___ \  | |      |  _ <    \ \/  \/ /                    #
#                    ____) | | |____  | |_) |    \  /\  /                     #
#                   |_____/   \_____| |____/      \/  \/                      #
#                                                                             #
#=============================================================================#

#    __   __   __        ___  __
#   |  \ /  \ /  ` |__/ |__  |__)
#   |__/ \__/ \__, |  \ |___ |  \
#

# Instructions from SCBW
#   github.com/Games-and-Simulations/sc-docker
# =======================
sudo apt update
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common

#=== add docker repository
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

#=== install docker
sudo apt update
sudo apt install -y docker-ce=17.09.0~ce-0~ubuntu # NB: this ver pkg was UNAVAILABLE

#=== Make sure you can run docker without sudo
sudo usermod -aG docker $USER
# Restart shell
docker run hello-world

#    __      ___       __           __   ___ ___       __
#   |__) \ /  |  |__| /  \ |\ |    /__` |__   |  |  | |__)
#   |     |   |  |  | \__/ | \|    .__/ |___  |  \__/ |
#

# Steps here different, assuming you have pyenv
pip install scbw
scbw.play --install  # This can take awhile, download n install


#    __             __   ___ ___       __                 __
#   / _` |  | |    /__` |__   |  |  | |__) .   \  / |\ | /  `
#   \__> \__/ |    .__/ |___  |  \__/ |    .    \/  | \| \__,
#

#=== Download VNC Viewer @   https://www.realvnc.com/en/connect/download/viewer/linux/
# eg: https://www.realvnc.com/download/file/viewer.files/VNC-Viewer-6.18.907-Linux-x64.deb

#######    IF YOU DOWNLOADED THE .deb,  INSTEAD OF BINARY             #########

#  VNC viewer is launched via 'vncviewer' through the deb install
#  However, scbw launches through 'vnc-viewer', so you need to symlink to same dir
#   >>-----> ln -s /usr/bin/vncviewer /usr/bin/vnc-viewer
#   * the scbw instructions say to symlink the binary to /usr/bin as 'vnc-viewer'
#   * the .deb is actually launched by 'vncviewer'


# FINALLY: watch a match between two bots!
#  (in headful mode, you must select the map, wait in lobby for bots to join, and start)
scbw.play --bots "krasi0" "CherryPi" --show_all


#=============================================================================#
#                           _____     ____     _____                          #
#                          |  __ \   / __ \   / ____|                         #
#                          | |__) | | |  | | | (___                           #
#                          |  _  /  | |  | |  \___ \                          #
#                          | | \ \  | |__| |  ____) |                         #
#                          |_|  \_\  \____/  |_____/                          #
#                                                                             #
#=============================================================================#

# Add ROS source to apt sources
# -----------------------------
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
sudo apt update

# Install and initialize
# ----------------------
sudo apt install ros-melodic-desktop-full
sudo rosdep init
rosdep update

# Env setup
# ---------
# in zshrc:
source /opt/ros/melodic/setup.zsh
# for rosinstall (only need python-rosinstall I think, other shit may be bloat)
sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential


#    ___                     _
#   / __|  __ _   ___  ___  | |__   ___
#  | (_ | / _` | |_ / / -_) | '_ \ / _ \
#   \___| \__,_| /__| \___| |_.__/ \___/
#

# Install and run
# ---------------
curl -sSL http://get.gazebosim.org | sh
gazebo
