#==============================================================================
## oh-my-zsh config ##
#==============================================================================

# Path to oh-my-zsh
#=========================
# Path to your oh-my-zsh installation.
export ZSH=/home/evan/.oh-my-zsh

# Zsh custom config
#=========================
ZSH_THEME="robbyrussell"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git,
  pyenv,
  pep8,
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8


#==============================================================================
#                          # Aliases #
#==============================================================================


#----------------------------------------------------
# Shell
#----------------------------------------------------

# File & Dir stuff
#=========================
alias md="mkdir"
alias mp="mkdir -p"
alias th="touch"

# List stuff
#=========================
alias h="history"
alias ldot="ls -ld.*"
alias lk="ls -1FSshX --file-type"

# Apps
#=========================
# editors
alias st="subl" # open file with sublime
alias stt="st ." # open dir with sublime



# Package utility
#=========================
alias api="apt-cache show"


# Apt-fast
#=========================
alias af="sudo apt-fast"
alias afu="sudo apt-fast update"
alias afg="sudo apt-fast update && sudo apt-fast upgrade"
alias afi="sudo apt-fast install"
alias afr="sudo apt-fast remove"
alias afrp="sudo apt-fast remove --purge"
alias afa="sudo apt-fast autoremove"
alias afc="sudo apt-fast clean"
alias affu="sudo apt-fast full-upgrade"
alias afl="apt-fast list"
alias afs="apt-fast search"
alias afshow="apt-fast show"

# For correcting output
#=========================
#eval $(thefuck --alias)


# Misc/Bookmarks
#=========================


#------------------------------------------------------------------------------
# Pathing and Environment
#------------------------------------------------------------------------------

# Pyenv
#=========================
export PATH="/home/evan/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# CUDA
#=========================
export PATH=/usr/local/cuda-9.2/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-9.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# Z jump
#=========================
. /home/evan/Soft/Installed/Utils/Z_jump/z.sh


# MKL export
#=========================
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

# Julia
#=========================
export PATH="$/home/evan/.julia:$PATH"

# StarCraft II
#=========================
#export SC2PATH=/home/evan/Projects/SC/StarCraftII/

# Bashmarks
#=========================
source ~/.local/bin/bashmarks.sh

# Zeal
#=========================
#export PATH="$/home/evan/.apps/zeal-0.6.0/build/bin/.zeal:$PATH"

#==============================================================================
#                          # Functions #
#==============================================================================

# Extract many types of compressed packages
#=========================
function extract() {
    if [ -f "$1" ] ; then
        case "$1" in
            *.tar.bz2)   tar xvjf "$1"                    ;;
            *.tar.gz)    tar xvzf "$1"                    ;;
            *.bz2)       bunzip2 "$1"                     ;;
            *.rar)       unrar x "$1"                     ;;
            *.gz)        gunzip "$1"                      ;;
            *.tar)       tar xvf "$1"                     ;;
            *.tbz2)      tar xvjf "$1"                    ;;
            *.tgz)       tar xvzf "$1"                    ;;
            *.zip)       unzip "$1"                       ;;
            *.ZIP)       unzip "$1"                       ;;
            *.pax)       cat "$1" | pax -r                ;;
            *.pax.Z)     uncompress "$1" â€”stdout | pax -r ;;
            *.Z)         uncompress "$1"                  ;;
            *.7z)        7z x "$1"                        ;;
            *)           echo "don't know how to extract '$1'..." ;;
        esac
    else
        echo "extract: error: $1 is not valid"
    fi
}

# View apt history
### pars for fun: install | remove | rollback
#=========================
function apt-history(){

      case "$1" in
        install)
              grep 'install ' /var/log/dpkg.log
              ;;
        upgrade|remove)
              grep $1 /var/log/dpkg.log
              ;;
        rollback)
              grep upgrade /var/log/dpkg.log | \
                  grep "$2" -A10000000 | \
                  grep "$3" -B10000000 | \
                  awk '{print $4"="$5}'
              ;;
        *)
              cat /var/log/dpkg.log
              ;;
      esac
}


# List sizes of entries at top-level, sorted
#=========================
function duh(){
    du -h --max-depth=1 | sort -h;
}


# Shortcut find
#========================
function f(){
    if [ "$#" -eq 1 ]; then
        sudo find / -iname "$1"
    elif [ "$#" -eq 2]; then
        find "$1" -iname "$2"
    else
        echo "too few or too many args for find func"
    fi
}


# Directory functions
#========================
# mkdir, go into it
function mc(){mkdir "$1" && cd "$1"}
function mpc(){mkdir -p "$1" && cd "$1"}
# cd, list contents
function cl(){cd "$1" && lk;}



# Reset PATH variable
#========================
function reset_path(){
    echo "Resetting Path...\n--------------------------------------------------"
    echo "  current path = $PATH\n"
    PATH=$(getconf PATH)
    echo "  reset path = $PATH\n"
    source ~/.zshrc
    echo "  resourced path = $PATH\n--------------------------------------------------"
}

# Resource zshrc
#=======================
function szshrc(){
    source ~/.zshrc
}

# Add line to shell config
#========================
function expzsh(){
    echo "\n\n# $1" >> ~/.zshrc
    echo '#========================' >> ~/.zshrc
    echo "$2" >> ~/.zshrc
}

eval $(thefuck --alias)


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
