# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/evan/.oh-my-zsh"
ZSH_THEME="robbyrussell"

export VISUAL=vim
export EDITOR="$VISUAL"

HISTIGNORE="$HISTIGNORE:jrnl *"
setopt HIST_IGNORE_SPACE
alias jrnl=" jrnl"


# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git-open
  zshmarks
  colored-man-pages
  zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh
# Source functions
source /home/evan/.dots/functions/git-extras-completion.zsh

###############################################################################
#       ___    _    _____  _  _                                        ########
#      | _ \  /_\  |_   _|| || |                                       ########
#      |  _/ / _ \   | |  | __ |                                       ########
#      |_|  /_/ \_\  |_|  |_||_|                                       ########
#                                                                      ########
###############################################################################

# Add to path, if not there
#==========================
# from: https://superuser.com/users/7778/gordon-davisson
pathadd() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="${PATH:+"$PATH:"}$1"
    fi
}

path_prepend() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+:${PATH}}"
    fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Pyenv
#=========================
# Paths
PYENV_ROOT="/home/evan/.pyenv"
PYENV_PATH="$PYENV_ROOT/bin"
#PYENV_VENV="$PYENV_ROOT/plugins/pyenv-virtualenv/shims"
#PYENV_SHIMS="$PYENV_ROOT/shims"
# Add paths
#pathadd "$PYENV_PATH"
#pathadd "$PYENV_VENV"
#pathadd "$PYENV_SHIMS"

#export PATH="/home/evan/.pyenv/bin:$PATH"
#/home/evan/.pyenv/plugins/pyenv-virtualenv/shims
#/home/evan/.pyenv/shims
path_prepend "$PYENV_PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# CUDA
#=========================
#export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}
CUDA_ROOT="/usr/local/cuda-10.0"
#CUDA_PATH=/usr/local/cuda-10.0/bin
CUDA_PATH="$CUDA_ROOT/bin"
pathadd "$CUDA_PATH"

#export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# User misc bins
#=========================
export PATH="${PATH:+${PATH}:}home/evan/.local/bin"
#USER_BIN="/home/evan/.local/bin"

#pathadd "$USER_BIN"


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -



# Misc
#==========================
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
. /home/evan/.Z_jump/z.sh

# doesnt work
## Base16 Shell
#BASE16_SHELL="$HOME/.config/base16-shell/"
#[ -n "$PS1" ] && \
#    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
#        eval "$("$BASE16_SHELL/profile_helper.sh")"

###############################################################################
#      _     _      ___     _     ___   ___   ___                      ########
#     /_\   | |    |_ _|   /_\   / __| | __| / __|                     ########
#    / _ \  | |__   | |   / _ \  \__ \ | _|  \__ \                     ########
#   /_/ \_\ |____| |___| /_/ \_\ |___/ |___| |___/                     ########
#                                                                      ########
###############################################################################

# zsh-marks
# =======================
alias g="jump"
alias s="bookmark"
alias d="deletemark"
alias p="showmarks"


# Ascii text print
#=========================
alias ascf="python -m art fonts"
alias asc="python -m art text"

# Apps
#=========================
# editors
alias st="subl" # open file with sublime
alias stt="subl ." # open dir with sublime

# git
#=========================
alias gs="git status"
alias gd="git diff"
alias ga="git add"
alias gcm="git commit -m"
alias gpull="git pull"
alias gpush="git push"
alias grh="git reset HEAD --hard"
alias gch="git checkout"


#-----------------------------------------------------------------------------#
#                       Shell & Package managers                              #
#-----------------------------------------------------------------------------#

# py env
#=========================
alias pipstd="pip install -U numpy scipy sklearn matplotlib chainer sympy pip-autoremove ipython jupyter notebook jupyter_contrib_nbextensions bs4 jrnl thefuck docutils rst2html5-tools sphinx sphinx-rtd-theme johnnydep bidict art termdown cheat cookiecutter"
alias pipupdate="pip list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U"


# Shell
#-------------------------------------
#==== file and dir stuff
alias md="mkdir -p"
alias cdb="cd -"

#==== list stuff
alias h="history"
alias ldot="ls -d --group-directories-first .*"
alias lk="ls -1FSshX --file-type"
alias l="ls --group-directories-first -X"


# Package Managers
#-------------------------------------
#==== package info
alias api="apt-cache show"

# Apt-fast
#=========================
apf='sudo apt-fast'
alias af="$apf"
alias afu="$apf update"
alias afg="$apf upgrade"
alias afug="$apf update && $apf upgrade"
alias afi="$apf install"
alias afr="$apf remove"
alias afrp="$apf remove --purge"
alias afa="$apf autoremove"
alias afc="$apf clean"
alias affu="$apf full-upgrade"
alias afl="apt-fast list"
alias afs="apt-fast search"
alias afshow="apt-fast show"



###############################################################################
#    ___   _   _   _  _    ___   _____   ___    ___    _  _   ___      ########
#   | __| | | | | | \| |  / __| |_   _| |_ _|  / _ \  | \| | / __|     ########
#   | _|  | |_| | | .` | | (__    | |    | |  | (_) | | .` | \__ \     ########
#   |_|    \___/  |_|\_|  \___|   |_|   |___|  \___/  |_|\_| |___/     ########
#                                                                      ########
###############################################################################

#-----------------------------------------------------------------------------#
#                                Endemic                                      #
#-----------------------------------------------------------------------------#
#==== write line to D log
dw(){
    D_FPATH="$HOME/D"
    echo "$1" >> "$HOME/D"
}

#==== write line to G log
gw(){
    G_FPATH="$HOME/Documents/G"
    C_FPATH="$HOME/Chest/MY_look_into.txt"
    echo "$1" >> "$G_FPATH"
    echo "$1" >> "$C_FPATH"
}


#-----------------------------------------------------------------------------#
#                        Shell Utils & Shortcuts                              #
#-----------------------------------------------------------------------------#

#==== reset PATH to default
function reset_path(){
    echo "Resetting Path...\n--------------------------------------------------"
    echo "  current path = $PATH\n"
    PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    #PATH=$(getconf PATH)
    echo "  reset path = $PATH\n"
    source ~/.zshrc
    echo "--------------------------------------------------"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#==== Extract many types of compressed packages
function extract() {
    if [ -f "$1" ] ; then
        case "$1" in
            *.tar.bz2)   tar xvjf "$1"                    ;;
            *.tar.gz)    tar xvzf "$1"                    ;;
            *.bz2)       bunzip2 "$1"                     ;;
            *.rar)       unrar x "$1"                     ;;
            *.gz)        gunzip "$1"                      ;;
            *.tar)       tar xvf "$1"                     ;;
            *.tbz2)      tar xvjf "$1"                    ;;
            *.tgz)       tar xvzf "$1"                    ;;
            *.zip)       unzip "$1"                       ;;
            *.ZIP)       unzip "$1"                       ;;
            *.pax)       cat "$1" | pax -r                ;;
            *.pax.Z)     uncompress "$1" â€”stdout | pax -r ;;
            *.Z)         uncompress "$1"                  ;;
            *.7z)        7z x "$1"                        ;;
            *)           echo "don't know how to extract '$1'..." ;;
        esac
    else
        echo "extract: error: $1 is not valid"
    fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Directory functions
#--------------------
#==== mkdir & cd into it
function mcd(){mkdir -p "$1" && cd "$1"}

#==== cd & list contents
function cdl(){cd "$1" && ls -1FSshX --file-type}

#==== list top-level file-sizes, sorted
function duh(){
    du -h --max-depth=1 | sort -h;
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Bash func modifiers
#--------------------
#==== shortcut find
function f(){
    if [ "$#" -gt 1 ]; then
        sudo find "$1" -iname "$2"
    else
        sudo find / -iname "$1"
    fi
}

# zsh stuff
#----------
#==== source zshrc
function srcz(){
    reset_path
    #source ~/.zshrc
}

#==== add line to shell config
function expzsh(){
    #expzsh 'My alias' 'alias testalias="echo test passed"'
    echo "\n\n#==== $1" >> ~/.zshrc
    echo "$2" >> ~/.zshrc
}

# Find and delete: CAREFUL
#========================
function find_and_remove_all(){
    matches=$(sudo find / -iname "*$1*")
    echo matches
    echo -n "Do you want to proceed (y/n)? "
    read answer
    if [ "$answer" != "${answer#[Yy]}" ] ;then
        sudo find / -iname "*$1*" -exec rm -rf "{}" \;
    else
        echo Aborted
    fi
}


#-----------------------------------------------------------------------------#
#                             Package Utils                                   #
#-----------------------------------------------------------------------------#

#==== add apt-repo
addrep(){
    sudo add-apt-repository "ppa:$1" -y
    sudo apt-fast update
}


#==== git clone repo & cd
function gcd(){
    REPO_URL=$1
    git clone --depth=1 $REPO_URL
    cdl "$(basename $1 .git)"
}

# Make new pyenv virtualenv
#========================
pvenv(){
    PY_VER=$1
    VENV_NAME=$2

    # Make venv
    pyenv virtualenv "$PY_VER" "$VENV_NAME"
    pyenv local "$VENV_NAME"
    # Update base packages
    pip install -U pip setuptools wheel
}




eval $(thefuck --alias)

export N_PREFIX="$HOME/.n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
