#!/bin/bash

##############################################################################
#                                                                            #
#       ad88888ba   88888888888  888888888888  88        88  88888888ba      #
#      d8"     "8b  88                88       88        88  88      "8b     #
#      Y8,          88                88       88        88  88      ,8P     #
#      `Y8aaaaa,    88aaaaa           88       88        88  88aaaaaa8P'     #
#        `"""""8b,  88"""""           88       88        88  88""""""'       #
#              `8b  88                88       88        88  88              #
#      Y8a     a8P  88                88       Y8a.    .a8P  88              #
#       "Y88888P"   88888888888       88        `"Y8888Y"'   88              #
#                                                                            #
##############################################################################

#==============================================================================
#                     Preinstallation Steps and Notes                         #
#==============================================================================

# Installation Media
#-----------------------------
#===== Bootable ISO
# Nothing has EVER worked for me in making a bootable USB drive other than
# "Universal USB Installer, pendrive," which, of course, is Windows only
#  * TRIED: Rufus, unetbootin (trash), dd, "bootiso", gparted
#  * WORKS: UUI, distro-provided tools (tails, kali, etc)
#  * TO TRY: etcher looks promising

#===== Troubleshooting
# If things are failing with the USB
#  * try a different, non-3.0 port
#  * not a "hub" port, like the front ones near power or otherwise joint hubs
#  * insure USB is FAT32, MBR table (GPR never worked)



# Installer
#-----------------------------
#===== Options
# - DO NOT CONNECT TO INTERNET/DOWNLOAD DURING INSTALL
#   - Remove bloat first
#     ONLY AFTER REMOVING BLOAT, should you even connect to internet
#
# - Do not install 3rd party shit (for wifi/video/flash etc)
#   - you can install what you need later, and flash 2018 lol


# Remove useless shit from default PATH
#--------------------------------------
#===== /usr/games
sudo vi /etc/environment
# delete '/usr/games:/usr/local/games' near the end



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#    _ __    _   _   _ __    __ _    ___
#   | '_ \  | | | | | '__|  / _` |  / _ \
#   | |_) | | |_| | | |    | (_| | |  __/
#   | .__/   \__,_| |_|     \__, |  \___|
#   | |                      __/ |
#   |_|                     |___/
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#==============================================================================
#                               Remove Bloat                                  #
#==============================================================================

# - During this process, all '*desktop' packages will likely get removed.
#   - this includes: gnome-desktop, mate-desktop, xubuntu-desktop
#     * DON'T WORRY! These packages are just the bundles of default apps
#       That come with those respective desktops
#


# Desktop and Apps
#-----------------------------
# Note: there may be some redundancy
#===== Default desktop shit: Apps, libraries
arp mate-desktop-common mate-calc-common mate-calc mugshot cheese-common libgnome-games-support-common
arp gnome-*
arp "*mate-desktop*"
arp "*firefox*" "transmission-*" "*pidgin*" "*parole*" "*xfburn*" "*libreoffice*"
arp "hplip*" "sgt*" "snapd*" simple-scan "thunderbird*" "*yelp*"
arp catfish devhelp glade xul-ext-ubufox

# Printer shit
#--------------
arp printer-driver-splix printer-driver-sag-gdi printer-driver-pxljr printer-driver-ptouch printer-driver-pnm2ppa printer-driver-min12xxw printer-driver-m2300w printer-driver-foo2zjs-common printer-driver-foo2zjs printer-driver-c2esp


# Fonts
#-----------------------------
# - I like to keep my font directory clean: only the fonts I want
# - The default font set includes font sets for seemingly every language
#   on the planet, and it becomes difficult to find the fonts YOU want
#   and YOU installed.

#===== Purge unwanted and non-English fonts (almost entirely south-Asian btw)
#  Note: this is the COMPLETE LIST
arp fonts-tlwg* fonts-thai* fonts-liberation* fonts-smc* fonts-liberation2* fonts-kacst* fonts-samyak* fonts-lao* fonts-deva* fonts-gujr* fonts-knda* fonts-guru* fonts-navilu* fonts-orya* fonts-beng* fonts-freefont* fonts-khmeros* fonts-mlym* fonts-lklug* fonts-sil* fonts-taml* fonts-sahadeva* fonts-sarai* fonts-lohit* fonts-symbola* fonts-gubbi* fonts-nakula* fonts-telu* fonts-tibetan* fonts-opensymbol* fonts-kalapi* fonts-indic* fonts-gargi* fonts-pagul*

#===== Noto is nice, but it also has about 50 extra languages
#  Instead, I download Noto from source, remove the extra langs from the .db
arp "fonts-noto*"


# Clean
#------------------------------------------------------------------------------
sudo apt autoremove



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#             _             _    _
#            (_)           (_)  | |
#             _    _ __     _   | |_
#            | |  | '_ \   | |  | __|
#            | |  | | | |  | |  | |_
#            |_|  |_| |_|  |_|   \__|
#
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#=============================================================================#
#                  Package manager setup and helpful aliases                  #
#=============================================================================#

# Apt fast
#------------------------------------------------------------------------------
sudo add-apt-repository ppa:apt-fast/stable
sed -i "$ a MIRRORS=( 'http://mirror.picosecond.org/ubuntu/,http://mirror.enzu.com/ubuntu/,http://la-mirrors.evowise.com/ubuntu/,http://mirrors.ocf.berkeley.edu/ubuntu/,http://mirror.math.ucdavis.edu/ubuntu/' )" /etc/apt-fast.conf



#                    Helpful setup aliases and funcs
#-----------------------------------------------------------------------------#

# Package manager and sudo
#-------------------------------------
#==== DEB
alias di="sudo dpkg -i"

# APT
#-------
apf='sudo apt-fast'
#==== install/update
alias af="$apf"
alias afu="$apf update"
alias afg="$apf upgrade"
alias afug="$apf update && $apf upgrade"
alias affu="$apf full-upgrade"
alias afi="$apf install"
#==== purge shit
alias afr="$apf remove"
alias afrp="$apf remove --purge"
alias afa="$apf autoremove"
alias afc="$apf clean"
#==== package info
alias afl="apt-fast list"
alias afs="apt-fast search"
alias afshow="apt-fast show"

#==== APT-REPO
addrep(){
    sudo add-apt-repository "ppa:$1" -y
    sudo apt-fast update
}

#==== EDIT
alias svi="sudo vi"

# Home, user, shell
#---------------------------------------
#==== dirs
alias mdp="mkdir -p"
alias cdb="cd -"
#==== mkdir & cd into it
function mcd(){mkdir -p "$1" && cd "$1"}
#==== cd & list contents
function cdl(){cd "$1" && ls -1FSshX --file-type}

#==== list stuff
alias ldot="ls -d --group-directories-first .*"
alias lk="ls -1FSshX --file-type"
alias l="ls --group-directories-first -X"


# misc
#---------------------------------------
#==== GIT
alias gc="git clone --depth=1"
function gcd(){
    REPO_URL=$1
    git clone --depth=1 $REPO_URL
    cdl "$(basename $1 .git)"
}
function gcto(){
    REPO=$1
    REPO_DEST=$2
    git clone --depth=1 "https://github.com/$REPO" $REPO_DEST
}


#==== PIP
alias pi="pip install -U"


#=============================================================================#
#                                GCC                                          #
#=============================================================================#

addrep 'ubuntu-toolchain-r/test' # Don't need repo if on 18.04
"gcc-7 g++-7 gcc-8 g++-8 --install-suggests"
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 80 --slave /usr/bin/g++ g++ /usr/bin/g++-7
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-8
update-alternatives --set gcc /usr/bin/gcc-8
$afug



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#        _                            __  _   _   _
#       | |                          / / | | (_) | |
#     __| |   ___   _ __    ___     / /  | |  _  | |__    ___
#    / _` |  / _ \ | '_ \  / __|   / /   | | | | | '_ \  / __|
#   | (_| | |  __/ | |_) | \__ \  / /    | | | | | |_) | \__ \
#    \__,_|  \___| | .__/  |___/ /_/     |_| |_| |_.__/  |___/
#                  | |
#                  |_|
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#==============================================================================
#                             Common Dependencies                             #
#==============================================================================

curl
wget
apt-transport-https
cmake
make
git-core
autoconf
automake
build-essential
libssl-dev
zlib1g-dev
libbz2-dev
libreadline-dev
libsqlite3-dev
llvm
libncurses5-dev
xz-utils
tk-dev
libatomic1
gfortran
perl
xclip
m4
pkg-config
software-properties-common
p7zip-full
p7zip-rar
redis-server
redis-tools
qt5-default
qt5-qmake
qttools5-dev-tools
libqt5dbus5 # just $ai "libqt5*" or?
libqt5network5
libqt5core5a
libqt5widgets5
libqt5gui5
libqt5svg5-dev
extra-cmake-modules
libqt5webkit5-dev
libqt5x11extras5-dev
libarchive-dev
libxcb-keysyms1-dev
texlive-xetex
libcurl4-openssl-dev
libcurl3
fonts-stix # math symbols
python-sphinx
texlive-latex-recommended
texlive-fonts-recommended
dvipng
librsvg2-bin
imagemagick
docbook2x
graphviz
postgresql
postgresql-server-dev-all
phantomjs
supervisor
# rabbitmq-server # only needed by one package (crestify)

# Printer utils
# ===============
printer-driver-brlaser

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#               ___    _ __   __   __
#              / _ \  | '_ \  \ \ / /
#             |  __/  | | | |  \ V /
#              \___|  |_| |_|   \_/
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# oh-my-zsh
# ===============
zsh
sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)";
#==== Plugins:
#colored-man-pages # available default
gcto paulirish/git-open.git $ZSH_CUSTOM/plugins/git-open
gcto jocelynmallon/zshmarks.git $ZSH_CUSTOM/plugins/zshmarks
gcto zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions


# pyenv
# ===============
curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash;
echo 'export PATH="/home/evan/.pyenv/bin:$PATH"' >> ~/.zshrc
echo 'eval "$(pyenv init -)"' >> ~/.zshrc
echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.zshrc


# Node, NPM, n
# =================
curl -L https://git.io/n-install | N_PREFIX=~/.n bash -s -- -y




###############################################################################
#                                                                             #
#                                                                             #
#                                                                             #
#    ███████╗ ██████╗ ███████╗████████╗██╗    ██╗ █████╗ ██████╗ ███████╗     #
#    ██╔════╝██╔═══██╗██╔════╝╚══██╔══╝██║    ██║██╔══██╗██╔══██╗██╔════╝     #
#    ███████╗██║   ██║█████╗     ██║   ██║ █╗ ██║███████║██████╔╝█████╗       #
#    ╚════██║██║   ██║██╔══╝     ██║   ██║███╗██║██╔══██║██╔══██╗██╔══╝       #
#    ███████║╚██████╔╝██║        ██║   ╚███╔███╔╝██║  ██║██║  ██║███████╗     #
#    ╚══════╝ ╚═════╝ ╚═╝        ╚═╝    ╚══╝╚══╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝     #
#                                                                             #
#                                                                             #
#                                                                             #
###############################################################################

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                         __     _             __
#    ___    _____   _____  ___    ____   / /_   (_)  ____ _   / /
#   / _ \  / ___/  / ___/ / _ \  / __ \ / __/  / /  / __ `/  / /
#  /  __/ (__  )  (__  ) /  __/ / / / // /_   / /  / /_/ /  / /
#  \___/ /____/  /____/  \___/ /_/ /_/ \__/  /_/   \__,_/  /_/
#


guake
# pip-packages, ALL
joplin
sublimetext
nativefier
croc
superproductivity
git-extras
fzf
z
zshmarks
shiori
flameshot
ghostwriter
mendeley

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                               _
#                              | |
#                __ _   _ __   | |_
#               / _` | | '_ \  | __|
#              | (_| | | |_) | | |_
#               \__,_| | .__/   \__|
#                      | |
#                      |_|
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

guake
vim
anki
chromium-browser
flameshot
go-for-it
figlet
git-extras
pdfsam  # install from deb; apt outdated

vlc
mpv
keepassxc
gparted
jq # 'sed' for json
deborphan
aria2
deluge
img2pdf
wkhtmltopdf
xfce4-timer-plugin
gedit

htop
tmux
tree
psensor
okular
nomacs
tlp
exfat-utils
flac
lame
x264
alarm-clock-applet
unrar
dictd
dict-gcide
dict-wn

# Try out some time:
clocJ
unar
wmctrl

#------------------------------------------------------------------------------
#                              PPAs/debs/ubuntu rdy
#------------------------------------------------------------------------------
# Super productivity
# ===============
echo "deb https://dl.bintray.com/johannesjo/super-productivity stable super-productivity" | tee -a /etc/apt/sources.list
$afu
superproductivity

# Sublime Text 3
# ===============
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add -;
echo "deb https://download.sublimetext.com/ apt/stable/" | tee /etc/apt/sources.list.d/sublime-text.list;
$afu
sublime-text

# Ghostwriter
# ===============
addrep wereturtle/ppa
ghostwriter

# Mendeley
#================
# DL:
https://www.mendeley.com/repositories/ubuntu/stable/amd64/mendeleydesktop-latest



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#            _
#           (_)
#    _ __    _   _ __
#   | '_ \  | | | '_ \
#   | |_) | | | | |_) |
#   | .__/  |_| | .__/
#   | |         | |
#   |_|         |_|
#
#
# TOP:
#=======
# Standard: numpy scipy sklearn chainer ipython jupyter
# App/misc:
#  apt-select jrnl pypi-cli pip-autoremove maybe cookiecutter termdown
#  johnnydeps
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#----- SORT THESE:
bibcure
scihub2pdf
arxivcheck
arxivscraper
arxiv
pyarxiv
#-------

#==============================
# Standard install for new venv
#==============================


#==== essentials
numpy
scipy
sklearn
matplotlib
#
#==== science
autograd
sympy
scikit-video
pydataset
primesieve
#
#==== AI libraries
chainer
gym
chainerrl
cupy
#neupy
#
#==== TF dependencies
keras
keras-applications
keras-preprocessing
protobuf
#
#==== Starcraft
s2clientprotocol
pysc2
sc2
scbw
#
#==== Notebook
ipython
jupyter
notebook
jupyterthemes
#
#==== Apps
retext
buku
jrnl
#
#==== Enhancements/lib
bidict
python-box

#
#==== Dev/dep
apt-select
bs4
black # only for other peep's gross code; MIND YOUR LINE WIDTHS PEEPL, < 80!
binarytree
cookiecutter
h5py
hickle
html5lib
pyqt5
pillow
cookiecutter
nose
pygame
pycurl
pyviz
coverage
#
#==== Pip/python package related
pypi-cli
pip-autoremove
vermin
pydeps
pipdeptree
johnnydep
pip-licenses
#
#==== Docs
doc2dash
pygments
bibtexparser
pandocfilters
cairosvg
betterbib
numpydoc
pypandoc
cursive_re
#---- linting
flake8
mccabe
#---- RST
docutils
sphinx
sphinx-rtd-theme
sphinxcontrib-jupyter
rst2html5-tools # *

#---- Scrape/parse/Arxiv
pybtex

#---- Text
textdistance[extras]

#
#==== CLI/Shell
docopt
click
thefuck
cheat
maybe  # *
howdoi
glances
#
#===== Misc
starred
oh-my-stars
termdown
# rstwatch # rst2html better
rstdiary
#
#==== ascii
pyfiglet
toilet
art
#
#==== Unknown
gitsuggest
pelican
# weasyprint # kind of bad, never gotten good render
grip
#
#==== git utils
#pygithub   # not in use
#github3.py # not in use
#
#==== Maybe interesting?
rebound-cli
astrodash # spectral convolutions deep learning supernovae
pipsalabim  # guesses your dependencies, no need for req file
dbcollection # collection of popular ML datasets


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#           _ __    _ __    _ __ ___
#          | '_ \  | '_ \  | '_ ` _ \
#          | | | | | |_) | | | | | | |
#          |_| |_| | .__/  |_| |_| |_|
#                  | |
#                  |_|
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#==== pnpm, faster package manager
sudo npm i -g pnpm

#==== nativefier
sudo pnpm install -g nativefier

#==== gitbook
sudo pnpm i -g gitbook-cli

#==== tldr pages
#sudo pnpm install -g tldr

# Nativefier
#--------------------------------------------
#pnpm install nativefier -g
#===== Google
nativefier "https://mail.google.com" -n gmail -a x64 -p linux --honest -m --single-instance --tray --counter
nativefier "https://drive.google.com" -n google-drive -a x64 -p linux --honest -m --single-instance --internal-url 3 -i /home/evan/Chest/Resources/Icons/google-drive.png
nativefier "https://keep.google.com" -n google-keep -a x64 -p linux --honest -m --single-instance --tray -i /home/evan/Chest/Resources/Icons/google_keep_icon.png
nativefier "https://calendar.google.com" -n google-calendar -a x64 -p linux --honest -m --single-instance --tray -i /home/evan/Chest/Resources/Icons/google-calendar.png

#====== Blog/read
nativefier "https://deepmind.com/blog/" -n deepmind-blog -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/deepmind_logo_swirl_blue.png
nativefier "https://blog.openai.com/" -n openai-blog -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/openai.png
nativefier "https://ai.google/research/pubs/" -n google-ai -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/googleAi-icon

#====== Job stuff
nativefier "https://www.simplyhired.com/" -n simply-hired -a x64 -p linux --honest -m -i /home/evan/Chest/Resources/Icons/SimplyHired-icon.png
nativefier "https://www.linkedin.com/uas/login" -p linux -a x64 -n linkedin --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/linkedin.png
nativefier "https://airtable.com/" -n airtable -a x64 -p linux --honest -m --single-instance -i /home/evan/Chest/Resources/Icons/airtable.png

#====== Other
nativefier "https://www.hackerrank.com/dashboard" -n hacker-rank -a x64 -p linux --honest -m -i /home/evan/Chest/Resources/Icons/HackerRank_logo.png

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                _     _
#               | |   | |
#         ___   | |_  | |__    ___   _ __
#        / _ \  | __| | '_ \  / _ \ | '__|
#       | (_) | | |_  | | | ||  __/ | |
#        \___/   \__| |_| |_| \___| |_|
#
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



#------------------------------------------------------------------------------
#                                Installer & simple
#------------------------------------------------------------------------------

#==== croc
curl https://getcroc.schollz.com | bash

#==== Joplin
wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh | bash

#==== Z jump
mkdir -p ~/.Z_jump
wget -O ~/.Z_jump/z.sh https://raw.githubusercontent.com/rupa/z/master/z.sh && echo ". $HOME/Z_jump/z.sh" >> ~/.zshrc

#==== fzf
gcto junegunn/fzf.git ~/.fzf


#------------------------------------------------------------------------------
#                                OTHER
#------------------------------------------------------------------------------


# MISC
#--------------------------------------------
zeal

# Shiori
#========
# Download latest binary from: https://github.com/RadhiFadlillah/shiori/releases
# mv binary to path folder:
mv shiori_linux_amd64 ~/.local/bin/shiori


# Reminiscence
#=============
# need ---> venv (pyenv), wkhtmltopdf, redis-server (optional)
mkdir reminiscence
cd reminiscence
pyenv virtualenv 3.7.0 reminiscence
pyenv local reminiscence
git clone --depth=1 https://github.com/kanishka-linux/reminiscence.git
cd reminiscence
pip install -r requirements.txt
mkdir logs archive tmp
python manage.py generatesecretkey
python manage.py nltkdownload
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver 127.0.0.1:8000
# open 127.0.0.1:8000 using any browser, login and start adding links

#**Note:** replace localhost address with local ip address of your server
#          to access web-interface from anywhere on the local network


# Chromium extensions
#====================
"Joplin Web Clipper"
"uBlock Origin"
"py3redirect"
"Archiveror"
"Dark Reader"
"WikiMapper"
"Close Tabs to the Left"
"Black Menu for Wikipedia"
"Refined GitHub"
"Lovely forks"
"Arc Dark"
"Github Original Streak"
"View Image"
"Wide Github"
"Awesome Stars"
"Redirectify"
"Tab Ahead"
"Wikipedia Reading Lists"
"uBlock Origin Extra"
"Privacy Badger"
"Better Bookmark"

# Openssh (local) server
#=======================
sudo apt install openssh-server;
sudo service ssh status;
sudo vi /etc/ssh/sshd_config; # change port from 22 to 2501
sudo systemctl restart sshd.service;
hostname -I; # get ip
# copy ssh-id from non-server machine
ssh-copy-id evan@remotehost;
sudo vi /etc/ssh/sshd_config; # disable password auth
sudo systemctl restart sshd.service;



#
#
#     _____   _____    _    _
#    / ____| |  __ \  | |  | |
#   | |  __  | |__) | | |  | |
#   | | |_ | |  ___/  | |  | |
#   | |__| | | |      | |__| |
#    \_____| |_|       \____/




#        _                _      _
#       | |              | |    | |
#     __| |   ___   ___  | | __ | |_    ___    _ __
#    / _` |  / _ \ / __| | |/ / | __|  / _ \  | '_ \
#   | (_| | |  __/ \__ \ |   <  | |_  | (_) | | |_) |
#    \__,_|  \___| |___/ |_|\_\  \__|  \___/  | .__/
#                                             | |
#                                             |_|


# Sublime themes
#======================
#  # Dark
#  #--------
#  ** piodine **
#  ** oceanic next**
#  easyballs
#  gooey
#  # Medium & desat
#  #---------------
#  mutedrainbow_sky
#  late_night
#  koralgreen
#  # Light
#  #--------
#  Github-v2  ***
#  snappy-light
#  softly
#  lazy
#  spring

# Sublime packages
#=======================

#==============================================================================
#                    _    _    _
#                   | |  | |  (_)
#         ___   ___ | |_ | |_  _  _ __    __ _  ___
#        / __| / _ \| __|| __|| || '_ \  / _` |/ __|
#        \__ \|  __/| |_ | |_ | || | | || (_| |\__ \
#        |___/ \___| \__| \__||_||_| |_| \__, ||___/
#                                         __/ |
#                                        |___/
#
#==============================================================================


# Keyboard
#-------------------------
#==== Volume
amixer set Master 5%-  # Alt+-
amixer set Master 5%+  # Alt+=
#==== misc/app
flameshot gui    # Print
echo 'keycode 118 = ' > ~/.Xmodmap # disable insert key


# Thunar custom actions:
#-------------------------
#==== open guake at current location
guake -n '%d%f ' -r "%f " --show -e "cd '%f' && ls -1FSshX --file-type"
#==== open sublime here
/usr/bin/subl .
#==== copy full path
echo -n %f | xclip -selection "clipboard"
#==== make notes
/usr/bin/touch notes.txt


#==== Japanese IME (mozc)
# mozc
#If you have Xubuntu 16.04 installed and want to be able to type Japanese, try the following steps:
#1. Go to "Settings" and then "Language Support": click the button "install/remove languages" and choose Japanese.
#2. Change the "Keyboard input method system" (same menu) to "fcitx". "Close" window.
#3. Go to "Keyboard", choose the "Layout" tab, and "Add" Japanese. Make sure "use system default" is untoggled. "Close" window (I'm not sure this step is necessary, but I did it anyway)
#4. Go to "Settings" and then "Fcitx Configuration", under the tab "Input method" click "+". Untoggle "only show current language" and choose "Mozc Japanese" from the list. (I had to scroll throught the entire list to find this. It doesn't start with "Keyboard - " like the other options.)
#5. Go to the tab "Global config" in the same window and look which keys trigger the Japanese input method. The default on my computer is CTRL+Space. Alternatively, a keyboard icon should be visible in the panel where you can select "Input method" - "Mozc"
#I admit to restarting my computer a few times inbetween some of the steps. I'm not sure if it is necessary.
#I don't remember ever installing "Mozc" and "Fcitx", I think they came with the system/Japanese language support.

# in Language Support > regional formats > display numbers usual format for japanese
# orage clock format: %x %R
# https://www.linuxquestions.org/questions/slackware-14/xfce-clock-custom-formatting-codes-753433/
# previous: %d %b, %H:%M
