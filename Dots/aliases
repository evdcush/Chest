#=============================================================================#
#                                                                             #
#                          ███████╗██╗   ██╗███████╗                          #
#                          ██╔════╝╚██╗ ██╔╝██╔════╝                          #
#                          ███████╗ ╚████╔╝ ███████╗                          #
#                          ╚════██║  ╚██╔╝  ╚════██║                          #
#                          ███████║   ██║   ███████║                          #
#                          ╚══════╝   ╚═╝   ╚══════╝                          #
#                                                                             #
#=============================================================================#
# System stuff

# Display
# =======
alias fixdisplay='sudo /etc/init.d/lightdm restart'

# Trackpoint sensitivity
# ======================
alias trk="xinput --set-prop `xinput | grep -i trackpoint | cut -d'=' -f2 | cut -c -2` 'libinput Accel Speed' -0.7"



#=============================================================================#
#                  ███████╗██╗  ██╗███████╗██╗     ██╗                        #
#                  ██╔════╝██║  ██║██╔════╝██║     ██║                        #
#                  ███████╗███████║█████╗  ██║     ██║                        #
#                  ╚════██║██╔══██║██╔══╝  ██║     ██║                        #
#                  ███████║██║  ██║███████╗███████╗███████╗                   #
#                  ╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝                   #
#                                                                             #
#=============================================================================#
# All aliases that use coreutils and stuff is in this section

# Help, man, etc.
# ===============
alias mn='man --page='  # man, but spits to stdout instead of getting captured in a pager.

# Dir stuff
# =========
# NB: oh-my-zsh defines useful aliases '..'|'...'|'....'
alias md='mkdir -p'   # mkdir all non-existing dirs in path
alias cdln='cd -P'    # cd to physical path rather than symlinked


# Permissions
# ===========
alias chwn="sudo chown -R $USER:$USER"  # maybe make a func that assumes most recent /media drive?
alias shx='chmod +x'


# List stuff
# ==========
# ---- OVERVIEW OF ls OPTS ----
# FORMAT: across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l, vertical -C
# SORTS : none (-U), size (-S), time (-t), version (-v), extension (-X)
# g:no-owner | G:no-group (same as o?) | 1:list one file per line
# X:sort alpha by extension (ALSO PUTS DIRS FIRST?, in alpha order)
# h:human-readable (eg, file size 6378230 -> 6.1M)
# F:indicate entries by file-type (eg, sym: foo.py@, dir: Documents/)

#=== ALIASES
alias l='ls -FX --group-directories-first'
alias ll='ls -ghGFX --time-style=long-iso --group-directories-first'  # list g: without owner, h: human-read, G: w/o group, F: classify, X: sort alpha by ext.
alias lsa='ls -lha --time-style=long-iso'
alias ldot='ls -dF --group-directories-first .*' # list dots only
alias lk='ls -1SshX --file-type --group-directories-first' # list contents, sorted by size, grouped by ext
alias lsz='ls -1shSr' # list files, 1-line each, show size in human-readable, sorted on size, reverse (biggest bottom)
#alias lzf='ls | fzf' # list w/ fuzzy search
alias countf='find . -type f -printf . | wc -c'

lzf(){
    # list with fuzzy search
    if [ "$#" -eq 1 ]; then DIR="$1"; else DIR='.'; fi
    ls $DIR | fzf
}


alias h='history'
alias hzf='history | fzf'
alias lsd='sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL'
alias duh='du -h --max-depth=1 | sort -h;'

# wget
# ====
alias wg='wget'


#---- misc
#alias plz='sudo $(fc -ln -1)' # mmm inconsistent
alias myip='inxi -i'
alias tjst='TZ="Asia/Tokyo" date'
alias tpst='TZ="America/Los_Angeles" date'
alias tedt='TZ="America/New_York" date'
alias tcet='TZ="Europe/Berlin" date'

alias pingu='ping google.com'


#=============================================================================#
#                                                                             #
#                           █████╗ ██████╗ ████████╗                          #
#                          ██╔══██╗██╔══██╗╚══██╔══╝                          #
#                          ███████║██████╔╝   ██║                             #
#                          ██╔══██║██╔═══╝    ██║                             #
#                          ██║  ██║██║        ██║                             #
#                          ╚═╝  ╚═╝╚═╝        ╚═╝                             #
#                                                                             #
#=============================================================================#
# apt aliases

#==== package stuff
alias api="apt-cache show"
alias dpkgi="sudo dpkg -i "
alias deps='apt-cache rdepends'

#==== Apt cleanup
# Clear apt lock
alias getlock="sudo rm /var/lib/apt/lists/lock; \
sudo rm /var/cache/apt/archives/lock; \
sudo rm /var/lib/dpkg/lock;
"

# Regenerate apt list cache (troubleshooting for 'Waiting at headers' crap)
alias regen_apt_list="sudo apt clean; \
sudo mv /var/lib/apt/lists{,.old}; \
sudo mkdir -p /var/lib/apt/lists/partial; \
sudo apt clean; sudo apt update;
"

#==== deborphan
alias rmorph="sudo deborphan | xargs sudo apt remove --purge -y" # careful with -y

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#=== apt
ap='sudo apt'
alias atu="$ap update"
alias atg="$ap upgrade"
alias atfg="$ap full-upgrade"
alias atug="$ap update && $ap upgrade"
alias ati="$ap install"
alias atr="$ap remove"
alias atrp="$ap remove --purge"
alias ata="$ap autoremove"
alias atay="$ap autoremove -y"
alias atc="$ap clean && $ap autoclean && $ap purge"
alias atl="$ap list"
alias atlu='apt list --upgradable'

alias akd="$ap-key del"




#=============================================================================#
#                                                                             #
#              ██████╗ ██╗   ██╗    ███████╗███╗   ██╗██╗   ██╗               #
#              ██╔══██╗╚██╗ ██╔╝    ██╔════╝████╗  ██║██║   ██║               #
#              ██████╔╝ ╚████╔╝     █████╗  ██╔██╗ ██║██║   ██║               #
#              ██╔═══╝   ╚██╔╝      ██╔══╝  ██║╚██╗██║╚██╗ ██╔╝               #
#              ██║        ██║       ███████╗██║ ╚████║ ╚████╔╝                #
#              ╚═╝        ╚═╝       ╚══════╝╚═╝  ╚═══╝  ╚═══╝                 #
#                                                                             #
#=============================================================================#
# all aliases related to python stuff
alias py='python'
alias ipy='ipython'
alias nb="jupyter notebook"

# notebook extensions
#  - jupyter_dashboards  <---- has NOT worked yet (maybe conflict with nbext?)
# pip install -U jupyter_dashboards; \
# jupyter dashboards quick-setup --sys-prefix; \
# jupyter nbextension enable jupyter_dashboards --py --sys-prefix"

# use this way too damn much
alias cit="echo 'code.interact(local=dict(globals(), **locals()))' \
| xclip -selection clipboard"
alias pit="echo 'from IPython import embed; embed();' \
| xclip -sel clip"

# Cython directives
alias cyd="echo '# distutils: language = c++\n# cython: language_level=3' | xclip"


#-----------------------------------------------------------------------------#
#                                pip packages                                 #
#-----------------------------------------------------------------------------#
#---- pip stuff
#alias pipi="pip install -U "
alias ipyp='pypi info'

# Install/upgrade pip pkgs and save pkg names
function pipi(){
    pip install -U "$@"
    #echo "$@" >> "$DIR_DOTS/pip_pkgs.txt"
}
piu="pip install -U"

# Typical stack
# =============
# work stuff
vis='matplotlib bokeh seaborn plotly pyvista'
cv='opencv-python imageio scikit-image scikit-video open3d-python pycocotools'

experiment_tools='tensorboard tensorboardX hydra-core omegaconf wandb'
jax_stack='jax jaxlib evojax flax'  # haiku?
hpo_stack='optuna ray hyperopt scikit-optimize HEBO pymoo'

# NB: ray[all] installs gpu stuff too! How do we otherwise get all the stuff?

# TODO: add mujoco
gym_stuff="pybullet 'gym[atari, box2d, classic_control]' gym-super-mario-bros"

# apps
mediadl='yt-dlp youtube-dl spotdl'
imgutils='rembg'  # because rembg has strict version dependencies (must be 3.9)

# Misc/experimental
# =================
staticstuff='MonkeyType'
gitty='starcli'

# Media
# -----
#=== SPHINX
# find more cool stuff:
#   https://github.com/ray-project/ray/blob/master/doc/requirements-doc.txt
#   https://github.com/ray-project/ray/blob/master/doc/source/conf.py
sphinx_stack='sphinx docutils restview rstcheck esbonio'
# Theming docs: https://www.sphinx-doc.org/en/master/usage/theming.html
sphinx_themes='sphinx-rtd-theme sphinx-book-theme furo sphinx-material \
karma-sphinx-theme piccolo-theme sphinx-theme'
writing_stack='jupyter-book'

alias pipinew="$piu pip setuptools wheel; \
$piu cython numpy scipy sklearn matplotlib sympy ipython jupyter notebook; \
$piu $gym_stuff; \
$piu opencv-python imageio scikit-image scikit-video open3d-python pandas; \
$piu $experiment_tools; \
$piu $hpo_stack; \
$piu $jax_stack; \
$piu feedparser requests lxml urllib3 bs4 pygithub mpi4py; \
$piu fart pyperclip unidecode python-slugify; \
$piu twine pytest pypi-cli; \
$piu sphinx docutils restview rstcheck esbonio grip; \
$piu termdown pdfCropMargins 'pix2tex[gui]'; \
$piu snakeviz; \
$piu tldr; \
$piu $sphinx_stack; \
$piu $sphinx_themes; \
$piu $writing_stack; \
$piu $mediadl;"

# NB: if you get an error with mpi4py --> `sudo apt install -y mpich`

# Snowflakes
# ----------
#== pytorch
function pipitorch(){
    # Wheel targets.
    tag_cpu='cpu'
    tag_cuda='cu116'  # current latest cuda build available for torch
    TORCH_URL='https://download.pytorch.org/whl'

    # Check if cuda is available.
    if nvidia-smi &>/dev/null; then
        TAG=$tag_cuda
        echo 'CUDA AVAILABLE; downloading cuda builds!'
    else
        TAG=$tag_cpu
        echo 'CUDA NOT FOUND; downloading cpu builds!'
    fi

    # Install pytorch.
    pip install -U --no-cache-dir torch torchvision torchaudio \
    --extra-index-url "$TORCH_URL/$TAG"

    # Install other torch-related pkgs.
    $piu torchinfo
}

#== CuPy
# `pip install cupy` just doesnt seem to work, so use whl
alias pipicupy="pip install cupy-cuda110 -f \
https://github.com/cupy/cupy/releases/tag/v7.8.0"

# GPU Utils
# =========
alias pipigpu="$piu gpustat"

# Extra setup
# ===========
alias pipimyg="$piu myougiden; updatedb-myougiden -f"
alias pipijupynb="$piu \
jupyter_contrib_nbextensions jupyter_nbextensions_configurator; \
jupyter contrib nbextension install --user; \
jupyter nbextensions_configurator enable --user;"


# UPDATE PIP PACKAGES
alias pipupdate="pip list --outdated --format=freeze \
| grep -v '^\-e' \
| cut -d = -f 1  \
| xargs -n1 pip install -U"


# Jupyter notebook
alias jn='jupyter notebook'


#=============================================================================#
#                                                                             #
#                           █████╗ ██████╗ ██████╗                            #
#                          ██╔══██╗██╔══██╗██╔══██╗                           #
#                          ███████║██████╔╝██████╔╝                           #
#                          ██╔══██║██╔═══╝ ██╔═══╝                            #
#                          ██║  ██║██║     ██║                                #
#                          ╚═╝  ╚═╝╚═╝     ╚═╝                                #
#                                                                             #
#=============================================================================#
# All aliases that use installed packages

# DE
# ==
#---- nav
alias fm='nautilus'

# Dev stuff
# =========
#---- sys
alias smi='nvidia-smi'

#---- editors
alias st="subl"    # open file with sublime
alias stt="subl ." # open  dir with sublime
alias subw='subl --new-window --wait'      # open file and wait on edits
alias ssubw='sudo subl -new-window --wait' # w/ sudo; eg `ssubw /etc/profile`

#---- npm
alias npmls='npm list -g --depth 0'  # list all globally installed packages

# Software
# ========
#---- youtube-dl
# TODO: figure out how to write stuff like the YT id and artist etc to the
#       file metadata (instead of writing id to filename.
#       SEE:
# yt-dlp -h | grep meta
#     --force-overwrites              Overwrite all video and metadata files. This
#     --write-info-json               Write video metadata to a .info.json file
#     --no-write-info-json            Do not write video metadata (default)
#     --write-playlist-metafiles      Write playlist metadata in addition to the
#                                     video metadata when using --write-info-json,
#     --no-write-playlist-metafiles   Do not write playlist metadata when using
#                                     extracting metadata even if the videos are
#     --embed-metadata                Embed metadata to the video file. Also
#                                     used (Alias: --add-metadata)
#     --no-embed-metadata             Do not add metadata to file (default)
#                                     (Alias: --no-add-metadata)
#     --parse-metadata FROM:TO        Parse additional metadata like title/artist
#     --replace-in-metadata FIELDS REGEX REPLACE
#                                     Replace text in a metadata field using the
#     --xattrs                        Write metadata to the video file's xattrs
alias dlmus='yt-dlp -x --audio-quality 0 -o "%(title)s.%(id)s.%(ext)s"'
alias dlmus_thumb='yt-dlp -x --audio-quality 0 --embed-thumbnail -o "%(title)s.%(id)s'
alias dlvid='yt-dlp -f bestvideo+bestaudio -o "%(title)s.%(id)s.%(ext)s" --restrict-filenames'

#---- vpn
spvpn='sudo pvpn'
alias vp="$spvpn"
alias vpi="$spvpn --status"
alias vpc="$spvpn --connect"
alias vpd="$spvpn --disconnect"
alias vprc="$spvpn --reconnect"
alias vpcc="$spvpn --country-connect"
alias vpjp="$spvpn --country-connect JP udp"
alias vpcf="$spvpn --fastest-connect"

#---- journal
alias jrnl=" jrnl" # alias for preventing hist from logging jrnl

#---- percollate
#alias perc='percollate pdf --output'
alias perc='percollate pdf'

#---- zsh-marks
alias g="jump"
alias s="bookmark"
alias d="deletemark"
alias p="showmarks"

#---- tree
alias treed='tree -d'   # only show dirs
alias trees='tree --dirsfirst -AF'

#---- Copy
alias clip="xclip -selection clipboard"
#alias clipo="xclip -o -sel clip"
alias delclip="xclip -o | xargs sudo rm -rf"
alias cpget="xclip -o -sel clip | xargs wget"
alias clipo='xclip -o'
alias pst='xclip -o >'

# copy previous command (is this really the only sol? stupidly verbose)
# if you dont translate, there is newline?
# if you dont cut, there is CMD number
# if you dont selection clipboard, xclip copies to who the f knows
alias cph='echo $(fc -l -1) \
| cut -d" " -f2- \
| tr -d "\n" \
| xclip -selection clipboard'

#---- joplin
alias get_jop="wget -O - \
https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh \
| bash"

#---- cheat & tldr
alias cht='cheat'
alias tl='tldr'

#---- wttr.in
alias weath='curl wttr.in'

#---- background noise
alias waves='play -n synth brownnoise synth pinknoise mix synth sine amod 0.3 10'

# SYMLINKS
# ========
#---- stow
alias stowpro='stow --target=/home/evan/Projects'
alias stowhome='stow --target=/home/evan'

# Misc software
# =============
alias rgr="ranger"            # ranger file manager
alias rs='redshift -O 2400'   # screen color temp adjust for night
#alias ja='myougiden'   # ja now a func that can accept from clipboard
alias myg='myougiden'         # shorter myougiden

#---- bat
alias bat='batcat'
alias bt='batcat -pP'
# ^: `bat --style=plain --paging never` (so no line nums and it spits output
#    to stdout without pager like cat)


#=============================================================================#
#                                                                             #
#                             ██████╗ ██╗████████╗                            #
#                            ██╔════╝ ██║╚══██╔══╝                            #
#                            ██║  ███╗██║   ██║                               #
#                            ██║   ██║██║   ██║                               #
#                            ╚██████╔╝██║   ██║                               #
#                             ╚═════╝ ╚═╝   ╚═╝                               #
#                                                                             #
#=============================================================================#

# Status
# ======
alias gs="git status"
alias gd="git diff --ignore-all-space"
alias gls="git ls-files"
alias glog="git log --graph --decorate --oneline --all"

# Navigation
# ==========
alias gm="git mv -v"
alias gsw='git switch'
alias gk="git checkout"
alias gkb="git checkout -b"
alias mstr="git checkout master"

# Add & Committing
# ================
alias ga="git add"
alias gau="git add -u"
alias gaa="git add -A"
alias gr="git restore"
alias gcm="git commit -m"
alias gcnm="git commit -n -m"
alias gucm="git add -u && git commit -m"
alias gcam="git commit -a -m"
alias gcmd="git commit --amend --no-edit"
alias gacmd="git add -u && git commit --amend --no-edit"

# Remote
# ======
alias gcn="git clone --depth=1"
alias gf="git fetch"
alias gpull="git pull"
alias gpush="git push"

# git extras stuff
# ================
alias gcu="git-crypt unlock $GCKEY_CHEST" # unlock encrypted stuff in chest

gcampu(){
    # add modified --> commit --> push
    msg="$@"
    git add -u
    git commit -m "$msg"
    git push
}

gacmpu(){
    # add modified --> commit --> push
    file="$1"
    msg="$2"
    git add $file
    git commit -m "$msg"
    git push
}

# Returns sorted size objects tracked in git tree
alias gsize="git rev-list --objects --all \
| git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' \
| sed -n 's/^blob //p' \
| sort --numeric-sort --key=2 \
| cut -c 1-12,41- \
| numfmt --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest"



#=============================================================================#
#                                                                             #
#                      ██╗   ██╗███████╗███████╗██████╗                       #
#                      ██║   ██║██╔════╝██╔════╝██╔══██╗                      #
#                      ██║   ██║███████╗█████╗  ██████╔╝                      #
#                      ██║   ██║╚════██║██╔══╝  ██╔══██╗                      #
#                      ╚██████╔╝███████║███████╗██║  ██║                      #
#                       ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝                      #
#                                                                             #
#=============================================================================#
# stuff that references user resources

#=== templates

function RDME() {
    SRC_DIR="$DIR_CHEST_TEMPLATES/README.rst"
    DEST_DIR="$PWD/README.rst"
    cp $SRC_DIR $DEST_DIR
}

#=== license copies
alias bsd3="cp $DIR_CHEST_TEMPLATES/Licenses/BSD-3-Clause.txt ./LICENSE"
alias lgpl="cp $DIR_CHEST_TEMPLATES/Licenses/LGPL-3.0.txt ./LICENSE"
alias agpl="cp $DIR_CHEST_TEMPLATES/Licenses/AGPL-3.0.txt ./LICENSE"
alias ccsa="cp $DIR_CHEST_TEMPLATES/Licenses/CC-BY-NC-SA-4.0.txt ./LICENSE"
alias ccnd="cp $DIR_CHEST_TEMPLATES/Licenses/CC-BY-NC-ND-4.0.txt ./LICENSE"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


function lorem() {
    LOREM='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus varius eleifend porttitor. Proin commodo, velit at molestie eleifend, odio lectus vehicula sem, vel suscipit quam urna quis dolor. Nulla quis lorem massa. Curabitur tincidunt lorem sed nisi aliquet, at molestie arcu viverra. Aliquam vitae metus nulla. Sed gravida egestas ex, id elementum justo congue a. Maecenas sed nulla in metus pulvinar ultrices. Ut mollis, lacus id convallis rutrum, quam mauris consectetur mauris, volutpat tincidunt lacus felis sit amet lectus. Vestibulum congue condimentum neque in efficitur. Phasellus suscipit orci a dolor aliquam, eget facilisis felis dictum. Sed sodales erat vel bibendum egestas. Proin scelerisque eget augue non rhoncus. Mauris dictum tortor ut mauris lobortis feugiat. Curabitur malesuada commodo mi sit amet vestibulum. Vivamus vel malesuada ligula.'
    echo $LOREM | xclip -sel clip
    echo $LOREM
}

