###############################################################################
#                                                                      ########
#  ██████   █████  ████████ ██   ██                                    ########
#  ██   ██ ██   ██    ██    ██   ██                                    ########
#  ██████  ███████    ██    ███████                                    ########
#  ██      ██   ██    ██    ██   ██                                    ########
#  ██      ██   ██    ██    ██   ██                                    ########
#                                                                      ########
###############################################################################

# PATH VARS
# =========
# Base paths
PATH_DEFAULT="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
PATH_USR_LOCAL="/usr/local"
PATH_OPT="/opt"
PATH_USER_BIN="$HOME/.local/bin"

# Lib/Env stuff
PATH_PYENV="$HOME/.pyenv/bin"
PATH_CUDA="$PATH_USR_LOCAL/cuda-10.0"


#---- Directories
DIR_DATA="$HOME/.Data"  # only for datasets!
DIR_DOTS="$HOME/.Dots"
DIR_KEY="$DIR_DOTS/Keys"
DIR_APPS="$HOME/.Apps"
DIR_DOCS="$HOME/Documents"
DIR_CHEST="$HOME/Chest"
DIR_MEDIA="$HOME/Media"
DIR_PROJECTS="$HOME/Projects"

#---- Files
PATH_HOARD_INBOX="$DIR_CHEST/Resources/hoard_inbox.json"
TOKEN_GH_PUB=$(cat "$DIR_KEY/gh_pub_token")

#---- Crypt keys
GCK_CHEST=$(cat "$DIR_KEY/chest_key")


#------------------------------------------------------------------------------
#     ___         __    __    _
#    / _ \ ___ _ / /_  / /   (_)  ___   ___ _
#   / ___// _ `// __/ / _ \ / /  / _ \ / _ `/
#  /_/    \_,_/ \__/ /_//_//_/  /_//_/ \_, /
#                                     /___/
#

# Path functions
# ==============
# from: https://superuser.com/users/7778/gordon-davisson
pathadd() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="${PATH:+"$PATH:"}$1"
    fi
}
path_prepend() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+:${PATH}}"
    fi
}

# Add to path
# ===========
#---- Pyenv
path_prepend "$PATH_PYENV"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

#---- CUDA, cuDNN
pathadd "$PATH_CUDA/bin"
export LD_LIBRARY_PATH="$PATH_CUDA/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"

#---- User path
export PATH="${PATH:+${PATH}:}$PATH_USER_BIN"


#------------------------------------------------------------------------------


###############################################################################
#                                                                      ########
#  ███████ ███████ ██   ██      ██████  ██████  ███    ██ ███████      ########
#     ███  ██      ██   ██     ██      ██    ██ ████   ██ ██           ########
#    ███   ███████ ███████     ██      ██    ██ ██ ██  ██ █████        ########
#   ███         ██ ██   ██     ██      ██    ██ ██  ██ ██ ██           ########
#  ███████ ███████ ██   ██      ██████  ██████  ██   ████ ██           ########
#                                                                      ########
###############################################################################

# MISC CONF
# =========
# Preferred editor
# ---------------
#export VISUAL=vim
export VISUAL=subl
export EDITOR="$VISUAL"

# jrnl prevent hist
# -----------------
HISTIGNORE="$HISTIGNORE:jrnl *"
setopt HIST_IGNORE_SPACE


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# ZSH ZGEN CONFIG

# Load zgen
# =========
source "${HOME}/.zgen/zgen.zsh"

# Initialize plugins
# ==================
if ! zgen saved; then
    echo "Creating a zgen save"

    # Base packages
    zgen oh-my-zsh

    # Plugins
    # =======
    zgen oh-my-zsh plugins/git
    zgen oh-my-zsh plugins/colored-man-pages
    #zgen oh-my-zsh plugins/command-not-found
    zgen oh-my-zsh plugins/copyfile
    zgen oh-my-zsh plugins/history
    zgen oh-my-zsh plugins/git
    zgen oh-my-zsh themes/robbyrussell

    #---- non-packaged
    zgen load jocelynmallon/zshmarks.git
    zgen load b4b4r07/enhancd
    zgen load zsh-users/zsh-syntax-highlighting

    # Generate init script for plugins
    # ================================
    zgen save
fi

###############################################################################
#                                                                      ########
#  ██    ██ ███████ ███████ ██████      ███████ ███    ██ ██    ██     ########
#  ██    ██ ██      ██      ██   ██     ██      ████   ██ ██    ██     ########
#  ██    ██ ███████ █████   ██████      █████   ██ ██  ██ ██    ██     ########
#  ██    ██      ██ ██      ██   ██     ██      ██  ██ ██  ██  ██      ########
#   ██████  ███████ ███████ ██   ██     ███████ ██   ████   ████       ########
#                                                                      ########
###############################################################################

# Source my dots
# ==============
source $HOME/.Aliases
source $HOME/.Functions
source "$DIR_DOTS/functions/git-extras-completion.zsh"

# Z jump
# ======
. "$DIR_APPS/Z_jump/z.sh"

# fzf
# ===
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Fuck
# ====
eval $(thefuck --alias)


#------------------------------------------------------------------------------
# shit added automatically by software
#------------------------------------------------------------------------------

# pip zsh completion start
function _pip_completion {
  local words cword
  read -Ac words
  read -cn cword
  reply=( $( COMP_WORDS="$words[*]" \
             COMP_CWORD=$(( cword-1 )) \
             PIP_AUTO_COMPLETE=1 $words[1] ) )
}
compctl -K _pip_completion pip
# pip zsh completion end



# n
export N_PREFIX="$HOME/.n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
